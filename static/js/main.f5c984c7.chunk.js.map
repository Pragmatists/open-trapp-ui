{"version":3,"sources":["theme.ts","icons/openTrapp.svg","utils/LocalStorage.ts","utils/jwtUtils.ts","api/OpenTrappAPI.ts","actions/constants.ts","components/header/UnauthorizedUser.tsx","actions/authentication.actions.ts","components/header/userDetails/UserDetails.tsx","components/header/AuthorizedUser.tsx","selectors/selectors.ts","components/header/Header.desktop.tsx","components/header/Header.mobile.tsx","components/landingPage/LandingPage.tsx","components/PrivateRoute.tsx","components/notFound/NotFoundPage.tsx","components/registrationPage/workLogHelpDialog/WorkLogHelpDialog.tsx","workLogExpressionParser/WorkLogEntryGrammar.ts","utils/dateTimeUtils.ts","workLogExpressionParser/ParsedWorkLog.ts","workLogExpressionParser/WorkLogExpressionParser.ts","components/Suggestion.tsx","components/registrationPage/workLogInput/TagsSuggestionFactory.ts","components/registrationPage/workLogInput/DatesSuggestionFactory.ts","components/registrationPage/confirmNewTagsDialog/ConfirmNewTagsDialog.tsx","components/registrationPage/workLogInput/ValidationStatus.tsx","components/registrationPage/selfDevDescriptionDialog/SelfDevDescriptionDialog.tsx","components/registrationPage/workLogInput/WorkLogInput.tsx","actions/calendar.actions.ts","actions/workLog.actions.ts","components/registrationPage/rulesDialog/RulesDialog.tsx","utils/workloadUtils.ts","components/monthlyReport/ReportCell.tsx","components/monthlyReport/MonthlyReport.tsx","components/registrationPageMonth/RegistrationPageMonth.tsx","actions/registration.actions.ts","utils/Month.ts","components/registrationPage/RegistrationPage.desktop.tsx","components/registrationPage/createWorkLogDialog/CreateWorkLogDialog.tsx","utils/collectionUtils.ts","utils/tagUtils.ts","components/settingsPage/SettingsPage.desktop.tsx","components/registrationPage/daySelector/DaySelector.tsx","components/workLogChip/WorkLogChip.tsx","components/registrationPage/workLogs/WorkLogs.tsx","components/registrationPage/workload/Workload.tsx","redux/notifications.reducer.ts","components/registrationPage/RegistrationPage.mobile.tsx","components/settingsPage/SettingsPage.mobile.tsx","components/reportingPage/reporting.model.ts","components/reportingPage/editWorkLogDialog/tagsAutocompleteInput/TagsAutocompleteInput.tsx","components/reportingPage/editWorkLogDialog/EditWorkLogDialog.tsx","components/reportingPage/tableReport/TableReport.tsx","components/reportingPage/bulkEditDialog/BulkEditQuery.ts","components/reportingPage/bulkEditDialog/BulkEditHint.tsx","components/reportingPage/bulkEditDialog/BulkEditDialog.tsx","components/reportingPage/projectsReport/ProjectsReport.tsx","components/reportingPage/reportingFilters/monthSelector/MonthSelector.tsx","components/reportingPage/reportingFilters/workLogSelector/SelectorChip.tsx","components/reportingPage/reportingFilters/workLogSelector/WorkLogSelector.tsx","components/reportingPage/reportingFilters/ReportingFilters.tsx","components/reportingPage/ReportingPage.desktop.tsx","actions/notifications.actions.ts","components/notifications/Notifications.tsx","components/reportingPage/dayCard/DayCard.tsx","components/reportingPage/monthSelector/MonthSelector.tsx","components/reportingPage/ReportingPage.mobile.tsx","components/adminPage/ServiceAccountsList.tsx","actions/admin.actions.ts","components/adminPage/UsersList.tsx","components/adminPage/ServiceAccountDialog.tsx","components/adminPage/AdminPage.tsx","components/bottomNavigation/BottomNavigation.tsx","AppRouting.tsx","App.tsx","serviceWorker.js","redux/authentication.reducer.ts","redux/calendar.reducer.ts","redux/workLog.reducer.ts","redux/registration.reducer.ts","redux/root.reducer.ts","redux/admin.reducer.ts","components/registrationPage/registration.model.ts","epics/index.ts","epics/monthEpic.ts","epics/workLogEpics.ts","epics/adminEpics.ts","epics/registrationEpics.ts","redux/store.ts","index.tsx"],"names":["theme","createTheme","palette","secondary","main","primary","error","typography","fontFamily","join","LocalStorage","token","storageUser","localStorage","getItem","AUTHORIZED_USER_KEY","user","JSON","parse","undefined","decode","exp","Date","getTime","clearAuthorizedUser","setItem","stringify","removeItem","OpenTrappAPI","axiosInstance","decorateRequestWithAuthToken","config","apiToken","headers","Authorization","handleErrorResponse","console","response","status","window","location","reload","Promise","reject","this","axios","create","baseURL","API_ROOT_URL","interceptors","request","use","err","idToken","get","then","r","data","year","month","username","day","tags","workload","note","post","projectNames","pipe","map","id","from","put","delete","mapTo","query","axiosResp","requestBody","numberOfPastMonths","url","moment","subtract","format","limit","name","authorizedUser","process","OpenTrappRestAPI","AUTHENTICATION_CONSTANTS","CALENDAR_CONSTANTS","WORK_LOG_CONSTANTS","REGISTRATION_CONSTANTS","NOTIFICATIONS_CONSTANTS","ADMIN_CONSTANTS","UnauthorizedUser","buttonText","dispatch","useDispatch","history","useHistory","clientId","responseType","onSuccess","getAuthResponse","id_token","obtainJWTToken","u","type","payload","_","push","catch","e","onFailure","UserDetails","profilePicture","avatarOnly","onLogout","useState","anchorEl","setAnchorElement","open","Boolean","className","onClick","event","currentTarget","Avatar","alt","src","Menu","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","AuthorizedUser","useSelector","s","authentication","displayName","userTagsSelector","state","workLogs","workLog","filter","w","employee","reduce","curr","prev","uniq","usernameSelector","userLoggedInSelector","loggedIn","selectedMonthSelector","calendar","selectedMonth","AppBarTabs","path","onNavigate","showAdminPage","Tabs","value","onChange","v","indicatorColor","Tab","icon","label","HeaderDesktop","pathname","useLocation","isLoggedIn","userRoles","roles","handleHeaderClicked","AppBar","position","color","openTrappIcon","Typography","variant","includes","p","HeaderMobile","Card","title","text","Divider","NotLoggedInLandingPage","LandingPage","redirect","search","replace","to","PrivateRoute","component","Inner","render","props","NotFoundPage","WorkLogHelpDialog","Dialog","DialogTitle","DialogContent","DialogActions","Button","SyntaxError","message","expected","found","Error","captureStackTrace","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","escapedParts","parts","part","Array","isArray","inverted","description","expected1","i","j","descriptions","sort","length","slice","describeExpected","found1","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","WorkLogEntry","peg$parseWorkLogEntry","peg$startRuleFunction","peg$c12","peg$c17","peg$literalExpectation","peg$c19","peg$c21","peg$c24","peg$c27","peg$c29","dayOfWeek","dayOfWeekDate","now","isBefore","isAfter","isToday","dateFormat","dateOfPrevious","peg$c30","peg$c31","peg$c33","peg$c34","peg$c35","add","dateOfNext","peg$c36","date","isValid","location1","peg$computeLocation","peg$savedPos","peg$currPos","peg$buildSimpleError","peg$c38","peg$c39","peg$classExpectation","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c77","peg$c78","peg$c79","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","startRule","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","end","peg$fail","s0","s1","s3","peg$parseWorkloadClause","peg$parseSPACE","peg$parseProjectAndDateClauses","resultMergedFrom","peg$parseProjectsClause","peg$parseDateClause","peg$c6","peg$c7","peg$parseWorkloadAndDateClauses","peg$parseWorkloadAndProjectClauses","projectAndDate","peg$c3","workloadAndProject","peg$c4","project","peg$c5","peg$c9","peg$c11","peg$parseDays","peg$parseSPACE_OPT","peg$parseWorkloadInHours","peg$parseMinutes","days","minutes","peg$c14","peg$parseWorkloadInDays","peg$parseHours","s2","peg$parseNUMBER","substring","peg$parseProjectClause","test","charAt","peg$parseWORD","peg$parseDayOfWeek","substr","s4","s5","s6","peg$parseNON_ZERO_DIGIT","peg$parseDIGIT","peg$parseYear","peg$parseMonth","peg$parseDay","peg$parseDate","peg$parseRelativeDay","relativeDay","toLowerCase","relativeDayDate","peg$c37","offsetSign","daysToAdd","peg$c80","peg$parseDateOffset","peg$parseDateDefinition","timeProvider","getCurrentDate","left","right","key","buildMessage","momentRange","extendMoment","daysInRange","startDate","endDate","pom","range","by","d","TimeProvider","ParsedWorkLog","expression","errors","tagsConfig","EXACTLY_ONE_TOP_LEVEL_TAG_ALLOWED_MSG","isEmpty","workloadExceeds24Hours","valid","addedTags","union","daysExpression","daysToExpression","newExpression","newDaysExpression","DATE_RANGE_PATTERN","DATE_PATTERN","joinedTags","t","dayString","size","matches","WORKLOAD_PATTERN","exec","parseGroup","group","toInteger","WorkLogExpressionParser","hasDatesRange","daysFromRangeExpression","noDateExpression","datesRange","parsed","parseExpression","hasDate","dayFromExpression","validate","result","trim","fromDateMatch","match","toDateMatch","fromDate","toDate","datesArray","fromData","toData","DATE_FORMAT","Suggestion","isHighlighted","suggestion","selected","index","highlight","style","fontWeight","String","TagsSuggestionFactory","presets","prefix","presetSuggestions","tagSuggestions","SUGGESTIONS_LIMIT","trimmedPrefix","trimPrefix","tag","startsWith","RegExp","preset","some","DatesSuggestionFactory","workLogExpressionParser","rawPrefix","POSSIBLE_SUGGESTIONS","mapSuggestionToDay","ConfirmNewTagsDialog","newTags","autoFocus","ValidationStatus","setAnchorEl","validationResult","htmlColor","IconButton","Popover","validateDescription","SelfDevDescriptionDialog","onCancel","onConfirm","setDescription","setError","useEffect","TextField","multiline","target","helperText","fullWidth","errorMessage","renderInputComponent","inputProps","inputRef","noop","ref","other","InputBase","node","renderSuggestion","WorkLogInput","autoAddedTagsMapping","onSave","helpOpen","setHelpOpen","suggestions","setSuggestions","setNewTags","selfDevDialogVisible","setSelfDevDialogVisible","getLastWord","split","pop","Paper","elevation","getSuggestionValue","placeholder","newValue","tagsWithAutoAddMapping","has","autoAddedTags","flatMap","withAddedTags","onKeyPress","difference","onSuggestionsFetchRequested","lastWord","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","preventDefault","shouldRenderSuggestions","renderSuggestionsContainer","containerProps","children","withNote","loadMonthAction","monthChangedAction","loadTagsAction","tagsLoadedAction","removeWorkLogAction","workLogRemovedAction","bulkEditDoneAction","workLogChangedAction","saveWorkLogAction","RulesDialog","setOpen","formatWorkload","Math","floor","daysRemainder","hours","workloadAsDays","round","ReportCell","dataTestId","cellClass","classNames","weekend","holiday","TableCell","stopPropagation","shiftKey","ReportWorkloadCell","dayDate","missingWorkload","isNil","ReportHeaderCell","Footer","workloadForDay","chain","values","flatten","groupBy","mapValues","sum","total","TableFooter","TableRow","idx","EmployeeRow","singleEmployee","onCellClick","MonthlyReport","selectedDays","onSelect","workLogEntries","entries","daysWithSelection","Table","TableHead","TableBody","entry","RegistrationPageMonth","onDaysSelected","previous","next","loadPresetsAction","presetsLoadedAction","Month","numberOfPrevious","numberOfNext","previousMonths","nextMonths","numberOfMonths","minus","plus","today","View","workLogsSelector","filteredWorkLogs","AUTO_ADDED_TAGS_MAPPING","mappingObject","reversedMapping","Map","forEach","set","toReversedMap","RegistrationPageDesktop","registration","withDays","SettingsPageDesktop","DaySelector","selectedDay","todayText","isSame","Fab","WorkLogChip","onDelete","Chip","ChipLabel","WorkLogs","List","ListSubheader","workLog1","workLog2","ListItem","Workload","onHoursChange","onMinutesChange","Slider","min","max","step","NotificationType","CreateWorkLogDialog","selectedTags","setSelected","TAGS","view","setView","setHours","setMinutes","descriptionError","setDescriptionError","WORKLOAD","sortedTags","sortBy","selfDevSelected","handleCancel","xor","disabled","TagList","dense","button","role","Checkbox","checked","tabIndex","disableRipple","ListItemText","RegistrationPageMobile","selectedPreset","setSelectedPreset","customWorkLogDialogOpen","setCustomWorkLogDialogOpen","forSelectedDay","forCurrentUser","workLogId","SettingsPageMobile","ReportingWorkLog","classes","InputProps","TagsAutocompleteInput","last","EditWorkLogDialog","setWorkload","names","setNames","TableReport","onEditWorkLog","onRemoveWorkLog","editedWorkLog","setEditedWorkLog","workLogsByDay","keys","renderEmployee","employeeIdx","numberOfEntries","rowSpan","onEdit","onEditWorkLogClick","onRemove","padding","reverse","workLogsByEmployee","employees","renderDay","TableReportRow","BulkEditQuery","selectedEmployees","BulkEditHint","entriesAffected","BulkEditDialog","selection","userTags","dialogOpen","setDialogOpen","setQuery","affectedEntries","setAffectedEntries","initialQuery","fromSelection","validateQuery","validateBulkEditQuery","encodedQuery","handleCloseDialog","paper","newQuery","ProjectsReport","totalWorkload","rowsData","toPairs","pair","share","rowData","toFixed","MonthChip","isSelected","MonthSelector","onMonthChange","shift","setShift","months","current","m","SelectorChip","WorkLogSelector","hideIneligible","chipLabel","workLogFilter","onSelectionChange","ineligibleHidden","setIneligibleHidden","labels","ReportingFilters","onTagsChange","onEmployeesChange","employeesFilter","tagsFilter","intersection","Report","ReportType","CALENDAR","reportType","setReportType","workLogsForSelectedUsersAndTags","textColor","TABLE","PROJECTS","ReportingPageDesktop","setSelectedEmployees","setSelectedTags","dto","updateWorkLogAction","Notification","uuid","INFO","ERROR","infoNotificationAction","info","errorNotificationAction","Notifications","notifications","dissmiss","dismissNotificationAction","notification","Snackbar","Reminder","DayCardContent","pastDate","CardContent","DayCard","onEditClick","showContent","CardHeader","subheader","CardActions","ReportingPageMobile","withRouter","groupedWorkLogs","d1","d2","localeCompare","empty","onEditDayClick","ServiceAccountsList","accounts","account","clientID","ServiceAccountRow","owner","loadServiceAccountsAction","UsersList","users","AuthorizedUserRow","email","AccountDetails","secret","margin","readOnly","DetailsActions","NameInput","NameActions","onCreate","ServiceAccountDialog","createdAccount","setCreatedAccount","setName","onCloseDialog","n","creteServiceAccount","a","AdminPage","serviceAccountDialogOpen","setServiceAccountDialogOpen","serviceAccounts","admin","authorizedUsers","deleteServiceAccountAction","LoadingPlaceholder","useStyles","makeStyles","root","bottom","BottomNavigationBar","BottomNavigation","showLabels","BottomNavigationAction","DesktopRouting","exact","MobileRouting","AppRouting","withWidth","width","isWidthUp","App","CssBaseline","basename","hostname","initialState","workLogState","rootReducer","combineReducers","action","Preset","combineEpics","action$","state$","openTrappApi","ofType","withLatestFrom","actionMonth","stateMonth","switchMap","calendarMonth","catchError","of","mergeMap","concat","saveWorkLog","mergeAll","ignoreElements","saveWorkLogs","removeWorkLog","updateWorkLog","serviceAccountsLoadedAction","deleteServiceAccount","serviceAccountDeletedAction","authorizedUsersLoadedAction","bulkEdit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","store","epicsMiddleware","createEpicMiddleware","dependencies","createStore","applyMiddleware","run","epic","getStore","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.f5c984c7.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\n\nexport const theme = createTheme({\n    palette: {\n        secondary: {\n            main: '#f5f5f5',\n        },\n        primary: {\n            main: '#2d6ca2',\n        },\n        error: {\n            main: '#c7254e'\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    }\n});\n","export default __webpack_public_path__ + \"static/media/openTrapp.94cb3a9f.svg\";","import { AuthorizedUser } from '../api/dtos';\nimport { isExpired } from './jwtUtils';\n\nexport class LocalStorage {\n  static readonly AUTHORIZED_USER_KEY = 'OpenTrappUser';\n\n  static get authorizedUser(): AuthorizedUser | null {\n    const storageUser = localStorage.getItem(LocalStorage.AUTHORIZED_USER_KEY);\n    const user: AuthorizedUser = storageUser ? JSON.parse(storageUser) : undefined;\n    if (!user) {\n      return null;\n    }\n    if (isExpired(user.token)) {\n      LocalStorage.clearAuthorizedUser();\n      return null;\n    }\n    return user;\n  }\n\n  static set authorizedUser(user: AuthorizedUser) {\n    localStorage.setItem(LocalStorage.AUTHORIZED_USER_KEY, JSON.stringify(user));\n  }\n\n  static clearAuthorizedUser() {\n    localStorage.removeItem(LocalStorage.AUTHORIZED_USER_KEY);\n  }\n}\n","import { sign, decode } from 'jsonwebtoken';\n\nexport function isExpired(token: string): boolean {\n  const decoded: any = decode(token);\n  return decoded.exp * 1000 < new Date().getTime();\n}\n\nexport function someJwtToken(displayName: string, valid = true) {\n  const name = displayName.toLowerCase().replace(' ', '.');\n  const payload = {\n    displayName,\n    name,\n    roles: ['USER'],\n    accountType: 'user',\n    provider: 'opentrapp',\n    email: `${name}@pragmatists.pl`,\n    iat: valid ? Math.floor(Date.now() / 1000) : Math.floor(Date.now() / 1000) - 30\n  };\n  return sign(payload, 'test-secret', {expiresIn: 10});\n}","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport moment from 'moment';\nimport { from, Observable } from 'rxjs';\nimport { map, mapTo } from 'rxjs/operators';\nimport {\n  AffectedEntriesDTO,\n  AuthorizedUser,\n  AuthorizedUserDTO,\n  BulkEditDTO,\n  CreateServiceAccountResponseDTO,\n  MonthDTO,\n  ReportingWorkLogDTO,\n  ServiceAccountDTO\n} from './dtos';\nimport { LocalStorage } from '../utils/LocalStorage';\n\nexport class OpenTrappAPI {\n  private static readonly API_ROOT_URL = `${process.env.REACT_APP_API_URL}/api/v1`;\n  private readonly axiosInstance: AxiosInstance;\n\n  constructor() {\n    this.axiosInstance = axios.create({\n      baseURL: OpenTrappAPI.API_ROOT_URL,\n      headers: {'Authorization': `Bearer ${OpenTrappAPI.apiToken}`}\n    });\n    this.axiosInstance.interceptors.request.use(\n        this.decorateRequestWithAuthToken,\n        err => Promise.reject(err)\n    );\n    this.axiosInstance.interceptors.response.use(\n        undefined,\n        this.handleErrorResponse\n    )\n  }\n\n  obtainJWTToken(idToken: string): Promise<AuthorizedUser> {\n    return this.axios.get<AuthorizedUser>(`/authentication/user-token`, {headers: {'id-token': idToken}})\n        .then(r => r.data);\n  }\n\n  calendarMonth(year: number, month: number): Observable<MonthDTO> {\n    return this.get<MonthDTO>(`/calendar/${year}/${month}`);\n  }\n\n  workLogEntries(year: number, month: number): Observable<ReportingWorkLogDTO[]> {\n    return this.get<ReportingWorkLogDTO[]>(`/calendar/${year}/${month}/work-log/entries`);\n  }\n\n  saveWorkLog(username: string, day: string, tags: string[], workload: string, note?: string): Observable<string> {\n    return this.post<{ id: string }>(`/employee/${username}/work-log/entries`, {projectNames: tags, workload, day, note}).pipe(\n            map(r => r.id)\n        );\n  }\n\n  updateWorkLog(id: string, tags: string[], workload: string): Observable<ReportingWorkLogDTO> {\n    return from(this.axios.put<ReportingWorkLogDTO>(`/work-log/entries/${id}`, {projectNames: tags, workload})).pipe(\n        map(r => r.data)\n    );\n  }\n\n  removeWorkLog(id: string): Observable<string> {\n    return this.delete(`/work-log/entries/${id}`).pipe(\n        mapTo(id)\n    );\n  }\n\n  validateBulkEditQuery(query: string): Promise<AffectedEntriesDTO> {\n    return this.axios.get<AffectedEntriesDTO>(`/work-log/bulk-update/${query}`)\n        .then(axiosResp => axiosResp.data);\n  }\n\n  bulkEdit(requestBody: BulkEditDTO): Observable<AffectedEntriesDTO> {\n    return this.post<AffectedEntriesDTO>('/work-log/bulk-update', requestBody);\n  }\n\n  tags(numberOfPastMonths?: number): Observable<string[]> {\n    const url = numberOfPastMonths ?\n        `/projects?dateFrom=${moment().subtract(numberOfPastMonths, 'months').format('YYYY-MM-DD')}` :\n        '/projects';\n    return this.get<string[]>(url);\n  }\n\n  presets(limit?: number): Observable<string[][]> {\n    const url = limit ? `/projects/presets?limit=${limit}` : '/projects/presets';\n    return this.get<string[][]>(url);\n  }\n\n  get serviceAccounts(): Observable<ServiceAccountDTO[]> {\n    return this.get<ServiceAccountDTO[]>('/admin/service-accounts');\n  }\n\n  creteServiceAccount(name: string): Promise<CreateServiceAccountResponseDTO> {\n    return this.axios.post<CreateServiceAccountResponseDTO>('/admin/service-accounts', {name})\n        .then(axiosResp => axiosResp.data);\n  }\n\n  deleteServiceAccount(id: string): Observable<string> {\n    return this.delete(`/admin/service-accounts/${id}`).pipe(\n        mapTo(id)\n    );\n  }\n\n  get authorizedUsers(): Observable<AuthorizedUserDTO[]> {\n    return this.get<AuthorizedUserDTO[]>('/admin/users');\n  }\n\n  get axios() {\n    return this.axiosInstance;\n  }\n\n  private post<T>(url: string, data: any, config?: AxiosRequestConfig): Observable<T> {\n    return from(this.axios.post(url, data, config)).pipe(\n        map(r => r.data)\n    );\n  }\n\n  private get<T>(url: string, config?: AxiosRequestConfig): Observable<T> {\n    return from(this.axios.get<T>(url, config)).pipe(\n        map(r => r.data)\n    );\n  }\n\n  private delete(url: string): Observable<AxiosResponse> {\n    return from(this.axios.delete(url));\n  }\n\n  private decorateRequestWithAuthToken = (config: AxiosRequestConfig) => {\n    const token = OpenTrappAPI.apiToken;\n    if (token != null) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  };\n\n  private handleErrorResponse = (error: any) => {\n    console.error(`HTTP request failed, status: ${error.response.status}`, error);\n    if (error.response.status === 401) {\n      LocalStorage.clearAuthorizedUser();\n      window.location.reload();\n    }\n    return Promise.reject(error);\n  };\n\n  private static get apiToken(): string {\n    const authorizedUser = LocalStorage.authorizedUser;\n    return authorizedUser ? authorizedUser.token : undefined;\n  }\n}\n\nexport const OpenTrappRestAPI = new OpenTrappAPI();\n","export const AUTHENTICATION_CONSTANTS = {\n  LOGIN_SUCCESS: 'AUTHENTICATION_LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'AUTHENTICATION_LOGIN_FAILURE',\n  LOGOUT: 'AUTHENTICATION_LOGOUT'\n};\n\nexport const CALENDAR_CONSTANTS = {\n  LOAD_MONTH: 'LOAD_MONTH',\n  MONTH_LOADED: 'MONTH_LOADED',\n  MONTH_CHANGED: 'MONTH_CHANGED'\n};\n\nexport const WORK_LOG_CONSTANTS = {\n  LOAD_WORK_LOGS: 'LOAD_WORK_LOGS',\n  WORK_LOGS_LOADED: 'WORK_LOGS_LOADED',\n  SAVE_WORK_LOG: 'SAVE_WORK_LOG',\n  LOAD_TAGS: 'LOAD_TAGS',\n  TAGS_LOADED: 'TAGS_LOADED',\n  UPDATE_WORK_LOG: 'UPDATE_WORK_LOG',\n  WORK_LOG_UPDATED: 'WORK_LOG_UPDATED',\n  REMOVE_WORK_LOG: 'REMOVE_WORK_LOG',\n  WORK_LOG_REMOVED: 'WORK_LOG_REMOVED',\n  BULK_EDIT_REQUEST: 'BULK_EDIT_REQUEST',\n  BULK_EDIT_DONE: 'BULK_EDIT_DONE',\n};\n\nexport const REGISTRATION_CONSTANTS = {\n  WORK_LOG_CHANGED: 'WORK_LOG_CHANGED',\n  WORK_LOG_SAVED: 'WORK_LOG_SAVED',\n  LOAD_PRESETS: 'LOAD_PRESETS',\n  PRESETS_LOADED: 'PRESETS_LOADED'\n};\n\nexport const NOTIFICATIONS_CONSTANTS = {\n  NOTIFICATION_CREATED: 'NOTIFICATION_CREATED',\n  NOTIFICATION_DISMISSED: 'NOTIFICATION_DISMISSED'\n};\n\nexport const ADMIN_CONSTANTS = {\n  LOAD_SERVICE_ACCOUNTS: 'LOAD_SERVICE_ACCOUNTS',\n  SERVICE_ACCOUNTS_LOADED: 'SERVICE_ACCOUNTS_LOADED',\n  DELETE_SERVICE_ACCOUNT: 'DELETE_SERVICE_ACCOUNT',\n  SERVICE_ACCOUNT_DELETED: 'SERVICE_ACCOUNT_DELETED',\n  LOAD_AUTHORIZED_USERS: 'LOAD_AUTHORIZED_USERS',\n  AUTHORIZED_USERS_LOADED: 'AUTHORIZED_USERS_LOADED'\n};\n","import GoogleLogin, { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { OpenTrappRestAPI } from '../../api/OpenTrappAPI';\nimport { loginFailedAction, loginSuccessAction } from '../../actions/authentication.actions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { LocalStorage } from '../../utils/LocalStorage';\n\nexport const UnauthorizedUser = ({buttonText}: {buttonText?: string}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleSuccessLogin = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n    const idToken = (response as GoogleLoginResponse).getAuthResponse().id_token;\n    OpenTrappRestAPI.obtainJWTToken(idToken)\n        .then(u => {\n          LocalStorage.authorizedUser = u;\n          return u;\n        })\n        .then(u => dispatch(loginSuccessAction(u)))\n        .then(_ => history.push('/registration'))\n        .catch(e => dispatch(loginFailedAction(e)));\n  };\n\n  return (\n      <GoogleLogin\n          clientId='522512788382-la0g5vpsf2q8anekstsh2l551m1ba4oe.apps.googleusercontent.com'\n          responseType='id_token'\n          buttonText={buttonText}\n          onSuccess={handleSuccessLogin}\n          onFailure={e => console.error('Google login failed', e)}\n      />\n  )\n}\n","import { AUTHENTICATION_CONSTANTS } from './constants';\nimport { AuthorizedUser } from '../api/dtos';\n\nexport const loginSuccessAction = (userDetails: AuthorizedUser) => ({\n  type: AUTHENTICATION_CONSTANTS.LOGIN_SUCCESS,\n  payload: userDetails\n});\n\nexport const loginFailedAction = (error: Error) => ({\n  type: AUTHENTICATION_CONSTANTS.LOGIN_FAILURE,\n  payload: error\n});\n\nexport const logoutAction = () => ({\n  type: AUTHENTICATION_CONSTANTS.LOGOUT\n});\n","import { useState } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport './UserDetails.scss';\n\ninterface Props {\n  username: string;\n  profilePicture: string;\n  avatarOnly?: boolean;\n  onLogout: VoidFunction;\n}\n\nexport const UserDetails = ({username, profilePicture, avatarOnly, onLogout}: Props) => {\n  const [anchorEl, setAnchorElement] = useState(null);\n  const handleMenu = (event: { currentTarget: any; }) => setAnchorElement(event.currentTarget);\n  const handleClose = () => setAnchorElement(null);\n\n  const open = Boolean(anchorEl);\n  return (\n      <div className='user-details' data-testid='user-details'>\n        <div onClick={handleMenu} className='user-details__user user'>\n          <Avatar alt={username}\n                  src={profilePicture}/>\n          {!avatarOnly && <div className='user__name'>{username}</div>}\n        </div>\n        <Menu id='menu-appbar'\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              open={open}\n              onClose={handleClose}>\n          <MenuItem>Settings</MenuItem>\n          <MenuItem onClick={onLogout}>Logout</MenuItem>\n        </Menu>\n      </div>\n  );\n};\n","import { logoutAction } from '../../actions/authentication.actions';\nimport { UserDetails } from './userDetails/UserDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport { LocalStorage } from '../../utils/LocalStorage';\n\nexport const AuthorizedUser = ({avatarOnly}: {avatarOnly?: boolean}) => {\n  const username = useSelector((s: OpenTrappState) => s.authentication.user?.displayName);\n  const profilePicture = useSelector((s: OpenTrappState) => s.authentication.user?.profilePicture);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const logoutAndRedirect = () => {\n    LocalStorage.clearAuthorizedUser();\n    dispatch(logoutAction());\n    history.push('/');\n  };\n  return (\n      <UserDetails onLogout={logoutAndRedirect}\n                   avatarOnly={avatarOnly}\n                   username={username}\n                   profilePicture={profilePicture}/>\n  );\n}\n","import { uniq } from 'lodash';\nimport { OpenTrappState } from '../redux/root.reducer';\n\nexport const userTagsSelector = (state: OpenTrappState): string[] => {\n  const workLogs = state.workLog.workLogs || [];\n  const username = state.authentication.user?.name;\n  const tags = workLogs\n      .filter(w => w.employee === username)\n      .map(w => w.projectNames)\n      .reduce((curr, prev) => [...curr, ...prev], []);\n  return uniq(tags);\n}\n\nexport const usernameSelector = (state: OpenTrappState) => state.authentication.user?.name;\n\nexport const userLoggedInSelector = (s: OpenTrappState) => s.authentication.loggedIn;\n\nexport const selectedMonthSelector = (state: OpenTrappState) => state.calendar.selectedMonth;\n","import AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport './Header.desktop.scss'\nimport openTrappIcon from '../../icons/openTrapp.svg';\nimport { UnauthorizedUser } from './UnauthorizedUser';\nimport { AuthorizedUser } from './AuthorizedUser';\nimport { userLoggedInSelector } from '../../selectors/selectors';\nimport { Tab, Tabs } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport BuildIcon from '@material-ui/icons/Build';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport { includes } from 'lodash';\n\ninterface AppBarProps {\n  path: string;\n  onNavigate: (path: string) => void;\n  showAdminPage: boolean;\n}\n\nconst AppBarTabs = ({path, onNavigate, showAdminPage}: AppBarProps) => (\n    <Tabs className='app-bar-tabs'\n          data-testid='app-bar-tabs'\n          value={path}\n          onChange={(e, v) => onNavigate(v)}\n          indicatorColor='primary'>\n      <Tab icon={<CreateIcon/>} value='/registration' label='Registration'/>\n      <Tab icon={<BarChartIcon/>} value='/reporting' label='Reporting'/>\n      {showAdminPage && <Tab icon={<BuildIcon/>} value='/admin' label='Admin'/>}\n    </Tabs>\n);\n\nexport const HeaderDesktop = () => {\n  const {pathname} = useLocation();\n  const history = useHistory();\n  const isLoggedIn = useSelector(userLoggedInSelector);\n  const userRoles = useSelector((state: OpenTrappState) => state.authentication.user?.roles);\n\n  const handleHeaderClicked = () => history.push('/');\n  return (\n      <AppBar position='sticky' color='secondary'>\n        <div className='header-desktop'>\n          <img src={openTrappIcon} alt='' className='header-desktop__logo' onClick={handleHeaderClicked}/>\n          <Typography variant='h5' color='inherit' className='header-desktop__text' onClick={handleHeaderClicked}>\n            Open<span>Trapp</span>\n          </Typography>\n          {isLoggedIn &&\n          <AppBarTabs path={pathname} showAdminPage={includes(userRoles, 'ADMIN')} onNavigate={p => history.push(p)}/>}\n          {isLoggedIn ? <AuthorizedUser/> : <UnauthorizedUser/>}\n        </div>\n      </AppBar>\n  );\n}\n","import AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport './Header.mobile.scss'\nimport { UnauthorizedUser } from './UnauthorizedUser';\nimport { AuthorizedUser } from './AuthorizedUser';\nimport { useHistory } from 'react-router-dom';\nimport { userLoggedInSelector } from '../../selectors/selectors';\n\nexport const HeaderMobile = () => {\n  const history = useHistory();\n  const isLoggedIn = useSelector(userLoggedInSelector);\n\n  const handleHeaderClicked = () => history.push('/registration');\n\n  return (\n          <AppBar position='static' className='header-mobile' color='secondary'>\n              <Typography variant='h5' color='inherit' className='header-mobile__header-text header-text' onClick={handleHeaderClicked}>\n                Open<span>Trapp</span>\n              </Typography>\n            <div className='header-mobile__icon'>\n              {isLoggedIn ? <AuthorizedUser avatarOnly={true} /> : <UnauthorizedUser buttonText='Sign in' />}\n            </div>\n          </AppBar>\n    );\n}\n","import Divider from '@material-ui/core/Divider';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useLocation } from 'react-router-dom';\nimport './LandingPage.scss';\nimport { parse } from \"querystring\";\nimport { Redirect } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { userLoggedInSelector } from '../../selectors/selectors';\n\nconst Card = ({title, text, icon}: { title: string, text: string, icon: JSX.Element }) => (\n    <div className='landing-page-card card' data-testid='landing-page-card'>\n      {icon}\n      <h2 className='card__title'>{title}</h2>\n      <Divider variant='middle' className='card__divider'/>\n      <div className='card__text'>{text}</div>\n    </div>\n);\n\nexport const NotLoggedInLandingPage = () => (\n    <div className='landing-page'>\n      <div className='landing-page__header header'>\n        <div className='header__content'>\n          <h1>Welcome to OpenTrapp!</h1>\n          <p>Capture your time into the simplest time registration application on the Internet.</p>\n        </div>\n      </div>\n      <div className='landing-page__content content'>\n        <Card title='Easy time capture'\n              text='Powerful expression language will help you quickly register your work.'\n              icon={<ScheduleIcon className='card__icon' color='primary'/>}/>\n        <Card title='Intuitive reporting'\n              text='Review your reports by applying different filters and enjoy the results in various presentation forms.'\n              icon={<EqualizerIcon className='card__icon' color='primary'/>}/>\n        <Card title='OpenID integration'\n              text='No registration required. You can simply use your existing Gmail account to sign in.'\n              icon={<PersonIcon className='card__icon' color='primary'/>}/>\n      </div>\n    </div>\n);\n\nexport const LandingPage = () => {\n  const isLoggedIn = useSelector(userLoggedInSelector);\n  const location = useLocation();\n  const params = parse(location.search.replace('?', ''));\n  const redirect = params.redirect as string;\n  if (redirect) {\n    return <Redirect to={{pathname: redirect, state: {from: location}}}/>;\n  } else if (isLoggedIn) {\n    return <Redirect to={{pathname: '/registration', state: {from: location}}} />;\n  }\n  return (\n      <NotLoggedInLandingPage/>\n  );\n};\n","import { Redirect, Route } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { userLoggedInSelector } from '../selectors/selectors';\n\nexport const PrivateRoute = ({component, path}: {component: any, path: string}) => {\n  const isLoggedIn = useSelector(userLoggedInSelector)\n  const Inner = component;\n  return (\n      <Route path={path}\n             render={props => (isLoggedIn ?\n                     <Inner/> :\n                     <Redirect to={{pathname: '/', state: {from: props.location}}}/>\n             )}/>\n  );\n};\n","import './NotFoundPage.scss'\n\nexport const NotFoundPage = () => (\n    <div className='not-found'>\n      <div className='not-found__code'>404</div>\n      <div className='not-found__text'>Page not found</div>\n    </div>\n);\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport './WorkLogHelpDialog.scss'\n\ninterface WorkLogHelpDialogProps {\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport const WorkLogHelpDialog = ({open, onClose}: WorkLogHelpDialogProps) => (\n    <Dialog open={open} className='work-log-help-dialog'>\n      <DialogTitle>Examples of usage</DialogTitle>\n      <DialogContent>\n        <div>\n          <code>1d #my-project</code>\n          <p>Report <strong>8 hours</strong> to <strong>my-project</strong> for <strong>today</strong>.</p>\n        </div>\n        <div>\n          <code>1d #my-project @yesterday</code>\n          <code>1d #my-project @t-1</code>\n          <p>Report <strong>8 hours</strong> to <strong>my-project</strong> for <strong>yesterday</strong>.</p>\n        </div>\n        <div>\n          <code>1d 2h 15m #my-project</code>\n          <p>Report <strong>10 hours and 15 minutes</strong> to <strong>my-project</strong> for <strong>today</strong>.</p>\n        </div>\n        <div>\n          <code>1d #my-project @1966/02/26</code>\n          <p>Report <strong>8 hours</strong> to <strong>my-project</strong> on <strong>Feburary 26, 1966</strong>.</p>\n        </div>\n        <div>\n          <code>1d #my-project @monday</code>\n          <code>1d #my-project @last-monday</code>\n          <p>Report <strong>8 hours </strong> to <strong>my project</strong> for <strong>last monday</strong>.</p>\n        </div>\n        <div>\n          <code>1d #my-project @next-monday</code>\n          <p>Report <strong>8 hours </strong> to <strong>my project</strong> for <strong>next monday</strong>.</p>\n        </div>\n        <div>\n          <code>1d #main-project #sub-project @today</code>\n          <p>Report <strong>8 hours </strong> to <strong>main-project</strong>,\n            precisely <strong>sub-project</strong> for <strong>today</strong> (8 hours total, not 16).</p>\n        </div>\n        <div>\n          <code>1d #vacations @2018/07/01~@2018/07/31</code>\n          <p>Report <strong>month </strong> of <strong>vacations</strong> for working days in <strong>July</strong>.</p>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color='primary'>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n);\n","// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.2 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\n\nimport moment from 'moment';\n\nexport interface IFilePosition {\n  offset: number;\n  line: number;\n  column: number;\n}\n\nexport interface IFileRange {\n  start: IFilePosition;\n  end: IFilePosition;\n}\n\nexport interface ILiteralExpectation {\n  type: \"literal\";\n  text: string;\n  ignoreCase: boolean;\n}\n\nexport interface IClassParts extends Array<string | IClassParts> {}\n\nexport interface IClassExpectation {\n  type: \"class\";\n  parts: IClassParts;\n  inverted: boolean;\n  ignoreCase: boolean;\n}\n\nexport interface IAnyExpectation {\n  type: \"any\";\n}\n\nexport interface IEndExpectation {\n  type: \"end\";\n}\n\nexport interface IOtherExpectation {\n  type: \"other\";\n  description: string;\n}\n\nexport type Expectation = ILiteralExpectation | IClassExpectation | IAnyExpectation | IEndExpectation | IOtherExpectation;\n\nexport class SyntaxError extends Error {\n  public static buildMessage(expected: Expectation[], found: string | null) {\n    function hex(ch: string): string {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\"/g,  \"\\\\\\\"\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        // eslint-disable-next-line\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        // eslint-disable-next-line\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function classEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\\]/g, \"\\\\]\")\n        .replace(/\\^/g, \"\\\\^\")\n        .replace(/-/g,  \"\\\\-\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        // eslint-disable-next-line\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        // eslint-disable-next-line\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function describeExpectation(expectation: Expectation) {\n      switch (expectation.type) {\n        case \"literal\":\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        case \"class\":\n          const escapedParts = expectation.parts.map((part) => {\n            return Array.isArray(part)\n              ? classEscape(part[0] as string) + \"-\" + classEscape(part[1] as string)\n              : classEscape(part);\n          });\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        case \"any\":\n          return \"any character\";\n        case \"end\":\n          return \"end of input\";\n        case \"other\":\n          return expectation.description;\n      }\n    }\n\n    function describeExpected(expected1: Expectation[]) {\n      const descriptions = expected1.map(describeExpectation);\n      let i;\n      let j;\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found1: string | null) {\n      return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  }\n\n  public message: string;\n  public expected: Expectation[];\n  public found: string | null;\n  public location: IFileRange;\n  public name: string;\n\n  constructor(message: string, expected: Expectation[], found: string | null, location: IFileRange) {\n    super();\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof (Error as any).captureStackTrace === \"function\") {\n      (Error as any).captureStackTrace(this, SyntaxError);\n    }\n  }\n}\n\nfunction peg$parse(input: string, options?: IParseOptions) {\n  options = options !== undefined ? options : {};\n\n  const peg$FAILED = {};\n\n  const peg$startRuleFunctions: {[id: string]: any} = { WorkLogEntry: peg$parseWorkLogEntry };\n  let peg$startRuleFunction: () => any = peg$parseWorkLogEntry;\n\n  const peg$c0 = function(workload: any, projectAndDate: any) {\n              return resultMergedFrom(workload, projectAndDate);\n          };\n  const peg$c1 = function(project: any, workloadAndDate: any) {\n              return resultMergedFrom(project, workloadAndDate);\n          };\n  const peg$c2 = function(date: any, workloadAndProject: any) {\n              return resultMergedFrom(workloadAndProject, date);\n          };\n  const peg$c3 = function(projectAndDate: any) {\n              return resultMergedFrom(projectAndDate, {\n                  workload: \"1d\"\n              });\n          };\n  const peg$c4 = function(workloadAndProject: any) {\n              return resultMergedFrom(workloadAndProject, {\n                  day: now().format(dateFormat)\n              });\n          };\n  const peg$c5 = function(project: any) {\n              return resultMergedFrom(project, {\n                  workload: \"1d\",\n                  day: now().format(dateFormat)\n              });\n          };\n  const peg$c6 = function(workload: any, date: any) {\n              return resultMergedFrom(workload, date);\n          };\n  const peg$c7 = function(date: any, workload: any) {\n              return resultMergedFrom(workload, date);\n          };\n  const peg$c8 = function(project: any, date: any) {\n              return resultMergedFrom(project, date);\n          };\n  const peg$c9 = function(date: any, project: any) {\n              return resultMergedFrom(project, date);\n          };\n  const peg$c10 = function(workload: any, project: any) {\n              return resultMergedFrom(workload, project);\n          };\n  const peg$c11 = function(project: any, workload: any) {\n              return resultMergedFrom(workload, project);\n          };\n  const peg$c12 = function(workload: any) { return { workload: workload }; };\n  const peg$c13 = function(days: any, hours: any) { return days + \" \" + hours; };\n  const peg$c14 = function(days: any, minutes: any) { return days + \" \" + minutes; };\n  const peg$c15 = function(hours: any, minutes: any) { return hours + \" \" + minutes; };\n  const peg$c16 = \"d\";\n  const peg$c17 = peg$literalExpectation(\"d\", false);\n  const peg$c18 = \"h\";\n  const peg$c19 = peg$literalExpectation(\"h\", false);\n  const peg$c20 = \"m\";\n  const peg$c21 = peg$literalExpectation(\"m\", false);\n  const peg$c22 = function(projectNames: any) { return {projectNames: projectNames}; };\n  const peg$c23 = \"#\";\n  const peg$c24 = peg$literalExpectation(\"#\", false);\n  const peg$c25 = function(projectName: any) { return projectName; };\n  const peg$c26 = \"@\";\n  const peg$c27 = peg$literalExpectation(\"@\", false);\n  const peg$c28 = function(date: any) { return {day: date}; };\n  const peg$c29 = function(dayOfWeek: any) {\n              return isToday(dayOfWeek)\n                  ? now().format(dateFormat)\n                  : dateOfPrevious(dayOfWeek).format(dateFormat);\n          };\n  const peg$c30 = \"last-\";\n  const peg$c31 = peg$literalExpectation(\"last-\", false);\n  const peg$c32 = function(dayOfWeek: any) {\n              return dateOfPrevious(dayOfWeek).format(dateFormat);\n          };\n  const peg$c33 = \"next-\";\n  const peg$c34 = peg$literalExpectation(\"next-\", false);\n  const peg$c35 = function(dayOfWeek: any) {\n              return dateOfNext(dayOfWeek).format(dateFormat);\n          };\n  const peg$c36 = function(date: any) {\n              if (moment(date, dateFormat).isValid()) {\n                  return moment(date, dateFormat).format(dateFormat);\n              } else {\n                  error(\"Not a valid date\");\n              }\n          };\n  const peg$c37 = function(relativeDay: any) {\n              relativeDay = relativeDay.toLowerCase();\n              var relativeDayDate = now();\n              if (relativeDay === \"yesterday\") {\n                  relativeDayDate.subtract(1, 'days');\n              } else if (relativeDay === \"tomorrow\") {\n                  relativeDayDate.add(1, 'days');\n              }\n              return relativeDayDate.format(dateFormat);\n          };\n  const peg$c38 = /^[Mm]/;\n  const peg$c39 = peg$classExpectation([\"M\", \"m\"], false, false);\n  const peg$c40 = \"onday\";\n  const peg$c41 = peg$literalExpectation(\"onday\", false);\n  const peg$c42 = /^[Tt]/;\n  const peg$c43 = peg$classExpectation([\"T\", \"t\"], false, false);\n  const peg$c44 = \"uesday\";\n  const peg$c45 = peg$literalExpectation(\"uesday\", false);\n  const peg$c46 = /^[Ww]/;\n  const peg$c47 = peg$classExpectation([\"W\", \"w\"], false, false);\n  const peg$c48 = \"ednesday\";\n  const peg$c49 = peg$literalExpectation(\"ednesday\", false);\n  const peg$c50 = \"hursday\";\n  const peg$c51 = peg$literalExpectation(\"hursday\", false);\n  const peg$c52 = /^[Ff]/;\n  const peg$c53 = peg$classExpectation([\"F\", \"f\"], false, false);\n  const peg$c54 = \"riday\";\n  const peg$c55 = peg$literalExpectation(\"riday\", false);\n  const peg$c56 = /^[Ss]/;\n  const peg$c57 = peg$classExpectation([\"S\", \"s\"], false, false);\n  const peg$c58 = \"aturday\";\n  const peg$c59 = peg$literalExpectation(\"aturday\", false);\n  const peg$c60 = \"unday\";\n  const peg$c61 = peg$literalExpectation(\"unday\", false);\n  const peg$c62 = \"/\";\n  const peg$c63 = peg$literalExpectation(\"/\", false);\n  const peg$c64 = /^[01]/;\n  const peg$c65 = peg$classExpectation([\"0\", \"1\"], false, false);\n  const peg$c66 = /^[0-3]/;\n  const peg$c67 = peg$classExpectation([[\"0\", \"3\"]], false, false);\n  const peg$c68 = /^[Yy]/;\n  const peg$c69 = peg$classExpectation([\"Y\", \"y\"], false, false);\n  const peg$c70 = \"esterday\";\n  const peg$c71 = peg$literalExpectation(\"esterday\", false);\n  const peg$c72 = \"oday\";\n  const peg$c73 = peg$literalExpectation(\"oday\", false);\n  const peg$c74 = \"omorrow\";\n  const peg$c75 = peg$literalExpectation(\"omorrow\", false);\n  const peg$c76 = \"t\";\n  const peg$c77 = peg$literalExpectation(\"t\", false);\n  const peg$c78 = /^[+-]/;\n  const peg$c79 = peg$classExpectation([\"+\", \"-\"], false, false);\n  const peg$c80 = function(offsetSign: any, offset: any) {\n              var daysToAdd = offsetSign + offset;\n              return now().add(daysToAdd, 'days').format(dateFormat)\n          };\n  const peg$c81 = \" \";\n  const peg$c82 = peg$literalExpectation(\" \", false);\n  const peg$c83 = /^[^ ]/;\n  const peg$c84 = peg$classExpectation([\" \"], true, false);\n  const peg$c85 = /^[0-9]/;\n  const peg$c86 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  const peg$c87 = /^[1-9]/;\n  const peg$c88 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n\n  let peg$currPos = 0;\n  let peg$savedPos = 0;\n  const peg$posDetailsCache = [{ line: 1, column: 1 }];\n  let peg$maxFailPos = 0;\n  let peg$maxFailExpected: any[] = [];\n  let peg$silentFails = 0;\n\n  let peg$result;\n\n  if (options.startRule !== undefined) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function error(message: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location1);\n  }\n\n  function peg$literalExpectation(text1: string, ignoreCase: boolean): ILiteralExpectation {\n    return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts: IClassParts, inverted: boolean, ignoreCase: boolean): IClassExpectation {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$endExpectation(): IEndExpectation {\n    return { type: \"end\" };\n  }\n\n  function peg$computePosDetails(pos: number) {\n    let details = peg$posDetailsCache[pos];\n    let p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos: number, endPos: number): IFileRange {\n    const startPosDetails = peg$computePosDetails(startPos);\n    const endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected1: Expectation) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected1);\n  }\n\n  function peg$buildSimpleError(message: string, location1: IFileRange) {\n    return new SyntaxError(message, [], \"\", location1);\n  }\n\n  function peg$buildStructuredError(expected1: Expectation[], found: string | null, location1: IFileRange) {\n    return new SyntaxError(\n      SyntaxError.buildMessage(expected1, found),\n      expected1,\n      found,\n      location1\n    );\n  }\n\n  function peg$parseWorkLogEntry(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseWorkloadClause();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseProjectAndDateClauses();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c0(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseProjectsClause();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSPACE();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWorkloadAndDateClauses();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseDateClause();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseSPACE();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseWorkloadAndProjectClauses();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c2(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseProjectAndDateClauses();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c3(s1);\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseWorkloadAndProjectClauses();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c4(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseProjectsClause();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWorkloadAndDateClauses(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseWorkloadClause();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDateClause();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c6(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDateClause();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSPACE();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWorkloadClause();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseProjectAndDateClauses(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseProjectsClause();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDateClause();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDateClause();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSPACE();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseProjectsClause();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWorkloadAndProjectClauses(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseWorkloadClause();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseProjectsClause();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c10(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseProjectsClause();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSPACE();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseWorkloadClause();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWorkloadClause(): any {\n    let s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseWorkloadInDays();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c12(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseWorkloadInHours();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseMinutes();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s1);\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWorkloadInDays(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseDays();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE_OPT();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWorkloadInHours();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c13(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDays();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSPACE_OPT();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseMinutes();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c14(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDays();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWorkloadInHours(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseHours();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSPACE_OPT();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseMinutes();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c15(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseHours();\n    }\n\n    return s0;\n  }\n\n  function peg$parseDays(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseNUMBER();\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 100) {\n        s3 = peg$c16;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHours(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseNUMBER();\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 104) {\n        s3 = peg$c18;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMinutes(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseNUMBER();\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 109) {\n        s3 = peg$c20;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProjectsClause(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseProjectClause();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseProjectClause();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseProjectClause(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSPACE_OPT();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s2 = peg$c23;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseWORD();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c25(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDateClause(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c26;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDateDefinition();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c28(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDateDefinition(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseDayOfWeek();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c29(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c30) {\n        s1 = peg$c30;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDayOfWeek();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c32(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c33) {\n          s1 = peg$c33;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseDayOfWeek();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c35(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseDate();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c36(s1);\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseRelativeDay();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c37(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDateOffset();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDayOfWeek(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c38.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s2 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c40) {\n        s3 = peg$c40;\n        peg$currPos += 5;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c44) {\n          s3 = peg$c44;\n          peg$currPos += 6;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c48) {\n            s3 = peg$c48;\n            peg$currPos += 8;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n          s1 = peg$currPos;\n          if (peg$c42.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 7) === peg$c50) {\n              s3 = peg$c50;\n              peg$currPos += 7;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c51); }\n            }\n            if (s3 !== peg$FAILED) {\n              s2 = [s2, s3];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            if (peg$c52.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c53); }\n            }\n            if (s2 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c54) {\n                s3 = peg$c54;\n                peg$currPos += 5;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c55); }\n              }\n              if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              if (peg$c56.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c57); }\n              }\n              if (s2 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 7) === peg$c58) {\n                  s3 = peg$c58;\n                  peg$currPos += 7;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c59); }\n                }\n                if (s3 !== peg$FAILED) {\n                  s2 = [s2, s3];\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = peg$currPos;\n                if (peg$c56.test(input.charAt(peg$currPos))) {\n                  s2 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c57); }\n                }\n                if (s2 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c60) {\n                    s3 = peg$c60;\n                    peg$currPos += 5;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c61); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDate(): any {\n    let s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseYear();\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s3 = peg$c62;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseMonth();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c62;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c63); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseDay();\n            if (s6 !== peg$FAILED) {\n              s2 = [s2, s3, s4, s5, s6];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseYear(): any {\n    let s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseNON_ZERO_DIGIT();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDIGIT();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseDIGIT();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMonth(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (peg$c64.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c65); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDIGIT();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNON_ZERO_DIGIT();\n    }\n\n    return s0;\n  }\n\n  function peg$parseDay(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (peg$c66.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDIGIT();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNON_ZERO_DIGIT();\n    }\n\n    return s0;\n  }\n\n  function peg$parseRelativeDay(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c68.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s2 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 8) === peg$c70) {\n        s3 = peg$c70;\n        peg$currPos += 8;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c72) {\n          s3 = peg$c72;\n          peg$currPos += 4;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (peg$c42.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c74) {\n            s3 = peg$c74;\n            peg$currPos += 7;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c75); }\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDateOffset(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 116) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c78.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNUMBER();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c80(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSPACE(): any {\n    let s0, s1;\n\n    s0 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s1 = peg$c81;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c81;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c82); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSPACE_OPT(): any {\n    let s0, s1;\n\n    s0 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s1 = peg$c81;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c81;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWORD(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c83.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c83.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c84); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNUMBER(): any {\n    let s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseNON_ZERO_DIGIT();\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$parseDIGIT();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseDIGIT();\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDIGIT();\n    }\n\n    return s0;\n  }\n\n  function peg$parseDIGIT(): any {\n    let s0;\n\n    if (peg$c85.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNON_ZERO_DIGIT(): any {\n    let s0;\n\n    if (peg$c87.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c88); }\n    }\n\n    return s0;\n  }\n\n\n      var dateFormat = \"YYYY/MM/DD\";\n\n      function timeProvider() {\n          // @ts-ignore\n        return options.timeProvider;\n      }\n\n      function now() {\n          return moment(timeProvider().getCurrentDate());\n      }\n\n      function isToday(dayOfWeek) {\n          var dayOfWeekDate = now().day(dayOfWeek);\n          return !dayOfWeekDate.isBefore(now(), 'day') && !dayOfWeekDate.isAfter(now(), 'day');\n      }\n\n      function dateOfPrevious(dayOfWeek) {\n          var dayOfWeekDate = now().day(dayOfWeek);\n          if (!dayOfWeekDate.isBefore(now(), 'day')) {\n              dayOfWeekDate.subtract(7, 'days');\n          }\n          return dayOfWeekDate;\n      }\n\n      function dateOfNext(dayOfWeek) {\n          var dayOfWeekDate = now().day(dayOfWeek);\n          if (!dayOfWeekDate.isAfter(now(), 'day')) {\n              dayOfWeekDate.add(7, 'days');\n          }\n          return dayOfWeekDate;\n      }\n\n      function resultMergedFrom(left, right) {\n          for (const key in right) {\n          left[key] = right[key];\n          }\n          return left;\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport interface IParseOptions {\n  filename?: string;\n  startRule?: string;\n  tracer?: any;\n  [key: string]: any;\n}\nexport type ParseFunction = (input: string, options?: IParseOptions) => any;\nexport const parse: ParseFunction = peg$parse;\n\n","import moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst momentRange = extendMoment(moment as any);\n\nexport function daysInRange(startDate: string, endDate: string, format = 'YYYY/MM/DD'): string[] {\n  let start = moment(startDate, format);\n  let end = moment(endDate, format);\n\n  if (end.isBefore(start)) {\n    const pom = start;\n    start = end;\n    end = pom;\n  }\n  const range = momentRange.range(start, end);\n  return Array.from(range.by('days'))\n      .map(d => d.format(format));\n}\n\nexport class TimeProvider {\n  getCurrentDate() {\n    return new Date();\n  }\n}\n","import { isEmpty, size, union, toInteger } from 'lodash';\nimport * as tagsConfig from '../tagsConfig.json';\n\nexport class ParsedWorkLog {\n  static readonly WORKLOAD_PATTERN = /(?:([0-9]+)d)?\\s?(?:([0-9]+)h)?\\s?(?:([0-9]+)m)?/;\n  static readonly DATE_RANGE_PATTERN = /@[A-Z0-9/a-z-+]+~@[A-Z0-9/a-z-+]+/g;\n  static readonly DATE_PATTERN = /@[A-Z0-9/a-z-+]+/g;\n  static readonly EXACTLY_ONE_TOP_LEVEL_TAG_ALLOWED_MSG = `Exactly one of the following tags required: ${tagsConfig.topLevel.map(s => '#' + s).join(\", \")}`;\n\n  constructor(\n      readonly expression: string,\n      readonly days: string[],\n      readonly tags: string[],\n      readonly workload: string,\n      readonly note?: string\n  ) {\n  }\n\n  public validate(): ValidationResult {\n    const errors = [];\n    if (this.tags.filter(e => tagsConfig.topLevel.includes(e)).length !== 1) {\n      errors.push(ParsedWorkLog.EXACTLY_ONE_TOP_LEVEL_TAG_ALLOWED_MSG)\n    }\n    if (this.tags.filter(e => tagsConfig.requireAdditionalTag.includes(e)).length > 0 && this.tags.length < 2) {\n      errors.push('Missing specific project tag: #projects #your-project-name');\n    }\n    if (isEmpty(this.workload)) {\n      errors.push('Workload was not provided');\n    }\n    if (ParsedWorkLog.workloadExceeds24Hours(this.workload)) {\n      errors.push(\"Workload can't exceed 24 hours\");\n    }\n    return {valid: errors.length === 0, errors}\n  }\n\n  public withAddedTags(addedTags: string[]) {\n    return new ParsedWorkLog(this.expression, this.days, union(this.tags, addedTags), this.workload);\n  }\n\n  static empty(): ParsedWorkLog {\n    return new ParsedWorkLog('', [], [], undefined);\n  }\n\n  static from(tags: string[], day: string, workload: string) {\n    const joinedTags = tags.map(t => `#${t}`).join(', ');\n    const dayString = day ? '' : `@${day}`;\n    return new ParsedWorkLog(`${workload} ${joinedTags} ${dayString}`, [day], tags, workload);\n  }\n\n  withDays(days: string[]): ParsedWorkLog {\n    const daysExpression = ParsedWorkLog.daysToExpression(days);\n    const newExpression = this.newExpression(daysExpression);\n    return new ParsedWorkLog(newExpression, days, this.tags, this.workload);\n  }\n\n  withNote(note: string): ParsedWorkLog {\n    return new ParsedWorkLog(this.expression, this.days, this.tags, this.workload, note)\n  }\n\n  private static daysToExpression(days: string[]): string {\n    if (size(days) === 0) {\n      return '';\n    } else if (size(days) === 1) {\n      return `@${days[0]}`;\n    } else {\n      return `@${days[0]}~@${days[days.length - 1]}`;\n    }\n  }\n\n  private static workloadExceeds24Hours(expression: string): boolean {\n    const matches = ParsedWorkLog.WORKLOAD_PATTERN.exec(expression);\n    const days = ParsedWorkLog.parseGroup(matches[1]);\n    const hours = ParsedWorkLog.parseGroup(matches[2]);\n    const minutes = ParsedWorkLog.parseGroup(matches[3]);\n    const workload = days * 8 * 60 + hours * 60 + minutes;\n    return workload > 24 * 60;\n  }\n\n  private static parseGroup(group: string): number {\n    return group ? toInteger(group) : 0;\n  }\n\n  private newExpression(newDaysExpression: string): string {\n    if (ParsedWorkLog.DATE_RANGE_PATTERN.test(this.expression)) {\n      return this.expression.replace(ParsedWorkLog.DATE_RANGE_PATTERN, newDaysExpression);\n    } else if (ParsedWorkLog.DATE_PATTERN.test(this.expression)) {\n      return this.expression.replace(ParsedWorkLog.DATE_PATTERN, newDaysExpression);\n    } else  if (!isEmpty(this.expression)) {\n      return this.expression + ' ' + newDaysExpression;\n    }\n    return newDaysExpression;\n  }\n}\n\nexport interface ValidationResult {\n  valid: boolean;\n  errors: string[];\n}\n","import { parse } from './WorkLogEntryGrammar';\nimport { trim } from 'lodash'\nimport { TimeProvider } from \"../utils/dateTimeUtils\";\nimport { daysInRange } from '../utils/dateTimeUtils';\nimport { ParsedWorkLog } from './ParsedWorkLog';\n\nexport class WorkLogExpressionParser {\n  private static readonly DATE_FORMAT = 'YYYY/MM/DD';\n\n  constructor(private readonly timeProvider: TimeProvider = new TimeProvider()) {\n  }\n\n  parse(expression: string): ParsedWorkLog {\n    if (this.hasDatesRange(expression)) {\n      const {noDateExpression, datesRange} = this.daysFromRangeExpression(expression);\n      const parsed = this.parseExpression(noDateExpression);\n      return new ParsedWorkLog(expression, datesRange, parsed.tags, parsed.workload);\n    } else if (this.hasDate(expression)) {\n      const day = this.dayFromExpression(expression);\n      const parsed = this.parseExpression(expression);\n      return new ParsedWorkLog(expression, [day], parsed.tags, parsed.workload);\n    }\n    return this.parseExpression(expression);\n  }\n\n  isValid(expression: string): boolean {\n    return this.parse(expression).validate().valid;\n  }\n\n  private parseExpression(expression: string): ParsedWorkLog {\n    try {\n      const result = parse(trim(expression), {timeProvider: this.timeProvider});\n      return new ParsedWorkLog(expression, [result.day], result.projectNames, result.workload);\n    } catch (e) {\n      return new ParsedWorkLog(expression, [], [], undefined);\n    }\n  }\n\n  private hasDatesRange(expression: string): boolean {\n    return ParsedWorkLog.DATE_RANGE_PATTERN.test(expression);\n  }\n\n  private hasDate(expression: string): boolean {\n    return ParsedWorkLog.DATE_PATTERN.test(expression);\n  }\n\n  private daysFromRangeExpression(expression: string): { noDateExpression: string; datesRange: string[]; } {\n    const fromDateSelector = /@[A-Z0-9/a-z-+]+~/g;\n    const toDateSelector = /~@[A-Z0-9/a-z-+]+/g;\n    const fromDateMatch = expression.match(fromDateSelector);\n    const toDateMatch = expression.match(toDateSelector);\n    const fromDate = fromDateMatch[0].substring(0, fromDateMatch[0].length - 1);\n    const toDate = toDateMatch[0].substring(1);\n\n    return {\n      noDateExpression: expression.replace(ParsedWorkLog.DATE_RANGE_PATTERN, ''),\n      datesRange: this.datesArray(fromDate, toDate)\n    };\n  }\n\n  private dayFromExpression(expression: string): string {\n    const dateMatch = expression.match(ParsedWorkLog.DATE_PATTERN);\n    const date = dateMatch[0];\n    return this.parseExpression(`#tag ${date}`).days[0];\n  }\n\n  private datesArray(from: string, to: string): string[] {\n    const fromData = parse('1h #projects ' + from, {timeProvider: this.timeProvider});\n    const toData = parse('1h #projects ' + to, {timeProvider: this.timeProvider});\n    return daysInRange(fromData.day, toData.day, WorkLogExpressionParser.DATE_FORMAT);\n  }\n}\n","import { MenuItem } from '@material-ui/core';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\n\nexport interface SuggestionItem {\n  label: string;\n  value: string;\n}\n\ninterface SuggestionProps {\n  isHighlighted: boolean;\n  query: string;\n  suggestion: SuggestionItem;\n}\n\nexport const Suggestion = ({isHighlighted, suggestion, query}: SuggestionProps) => {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return (\n      <MenuItem selected={isHighlighted} component=\"div\">\n        <div>\n          {parts.map((part, index) =>\n              part.highlight ? (<span key={String(index)} style={{fontWeight: 500}}>{part.text}</span>) :\n                  (<strong key={String(index)} style={{fontWeight: 300}}>{part.text}</strong>)\n          )}\n        </div>\n      </MenuItem>\n  );\n};\n","import { SuggestionItem } from '../../Suggestion';\nimport { Preset } from '../registration.model';\nimport { some } from 'lodash';\n\nexport class TagsSuggestionFactory {\n  private static SUGGESTIONS_LIMIT = 5;\n\n  constructor(private readonly tags: string[], private readonly presets: Preset[]) {}\n\n  suggestions(text: string, prefix: string): SuggestionItem[] {\n    const presets = this.presetSuggestions(text, prefix);\n    const tags = this.tagSuggestions(text, prefix, TagsSuggestionFactory.SUGGESTIONS_LIMIT - presets.length);\n    return [...presets, ...tags];\n  }\n\n  private tagSuggestions(text: string, prefix: string, limit = TagsSuggestionFactory.SUGGESTIONS_LIMIT): SuggestionItem[] {\n    const trimmedPrefix = this.trimPrefix(prefix);\n    return this.tags\n        .filter(tag => tag.toLowerCase().startsWith(trimmedPrefix))\n        .slice(0, limit)\n        .map(tag => tag.trim())\n        .sort()\n        .map(tag => ({\n          label: tag,\n          value: text.replace(new RegExp(`${prefix}$`), `#${tag} `)\n        }));\n  }\n\n  private presetSuggestions(text: string, prefix: string): SuggestionItem[] {\n    const trimmedPrefix = this.trimPrefix(prefix);\n    return this.presets\n        .filter(preset => some(preset.tags, tag => tag.toLowerCase().startsWith(trimmedPrefix)))\n        .slice(0, TagsSuggestionFactory.SUGGESTIONS_LIMIT)\n        .map(preset => ({\n          label: preset.tags.join(', '),\n          value: text.replace(new RegExp(`${prefix}$`), preset.tags.map(t => `#${t} `).join(''))\n        }));\n  }\n\n  private trimPrefix(prefix: string) {\n    return prefix.replace('#', '');\n  }\n}\n","import { startsWith } from 'lodash';\nimport { TimeProvider } from '../../../utils/dateTimeUtils';\nimport { SuggestionItem } from '../../Suggestion';\nimport { WorkLogExpressionParser } from '../../../workLogExpressionParser/WorkLogExpressionParser';\n\nexport class DatesSuggestionFactory {\n  private static POSSIBLE_SUGGESTIONS = [\n    'today',\n    'yesterday',\n    'tomorrow',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n    't-1',\n    't-2',\n    't-3'\n  ];\n  private workLogExpressionParser;\n\n  constructor(timeProvider: TimeProvider = new TimeProvider()) {\n    this.workLogExpressionParser = new WorkLogExpressionParser(timeProvider)\n  }\n\n  suggestions(text: string, prefix: string): SuggestionItem[] {\n    const rawPrefix = prefix.replace('@', '');\n    return DatesSuggestionFactory.POSSIBLE_SUGGESTIONS\n        .map(suggestion => ({\n          label: suggestion,\n          day: this.mapSuggestionToDay(suggestion)\n        }))\n        .filter(suggestion => startsWith(suggestion.label, rawPrefix) || startsWith(suggestion.day, rawPrefix))\n        .slice(0, 5)\n        .map(suggestion => ({\n          label: suggestion.label,\n          value: text.replace(new RegExp(`${prefix}$`), `@${suggestion.label} `)\n        }));\n  }\n\n  private mapSuggestionToDay(suggestion: string) {\n    return this.workLogExpressionParser\n        .parse('1d #proj @' + suggestion)\n        .day;\n  }\n}\n","import { ParsedWorkLog } from '../../../workLogExpressionParser/ParsedWorkLog';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\ninterface ConfirmNewTagsDialogProps {\n  workLog: ParsedWorkLog;\n  newTags: string[];\n  onClose: (workLog: ParsedWorkLog, result: boolean) => void;\n  open: boolean;\n}\n\nexport const ConfirmNewTagsDialog = ({open, newTags, onClose, workLog}: ConfirmNewTagsDialogProps) => (\n    <Dialog open={open} onClose={() => onClose(workLog, false)}>\n      <DialogTitle>New tags will be created</DialogTitle>\n      <DialogContent data-testid='confirm-new-tags'>\n        <p>\n          This action will add new {newTags.length > 1 ? ' tags' : 'tag'}: <strong>{newTags.join(', ')}</strong>.\n        </p>\n        <p>Make sure you really want to do this!</p>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose(workLog, false)} data-testid='cancel-new-tags-button'>\n          Cancel\n        </Button>\n        <Button onClick={() => onClose(workLog, true)} color='primary' autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n);\n","import { useState, Fragment } from 'react';\nimport { isEmpty } from 'lodash';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport './ValidationStatus.scss'\nimport OkIcon from '@material-ui/icons/CheckCircle';\nimport { ParsedWorkLog } from '../../../workLogExpressionParser/ParsedWorkLog';\nimport { Popover, Typography } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\ninterface ValidationStatusProps {\n  workLog: ParsedWorkLog;\n}\n\nexport const ValidationStatus = ({workLog}: ValidationStatusProps) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const open = Boolean(anchorEl);\n  const validationResult = workLog.validate();\n  if (validationResult.valid) {\n    return (\n        <OkIcon htmlColor='#5BC440' data-testid='ok-indicator'/>\n    )\n  } else if (!isEmpty(workLog.expression)) {\n    return (\n        <Fragment>\n          <IconButton aria-label='Help' onClick={handleClick} data-testid='error-indicator'>\n            <ErrorIcon color='error'/>\n          </IconButton>\n          <Popover\n              open={open}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n              transformOrigin={{vertical: 'top', horizontal: 'center'}}>\n            {\n              validationResult.errors.map(error =>\n                  <Typography className='validation-error' key={error}>{error}</Typography>\n              )\n            }\n          </Popover>\n        </Fragment>\n    )\n  }\n  return null;\n};\n","import { useEffect, useState } from 'react';\nimport { isEmpty, trim } from 'lodash'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\ninterface SelfDevDescriptionDialogProps {\n  open: boolean;\n  onCancel: () => void;\n  onConfirm: (description: string) => void;\n}\n\nconst validateDescription = (description: string) => {\n  if (isEmpty(trim(description))) {\n    return 'Description cannot be empty'\n  } else if (description.length > 1000) {\n    return 'Description cannot be longer than 1000 characters'\n  }\n  return undefined\n}\n\nexport const SelfDevDescriptionDialog = ({open, onCancel, onConfirm}: SelfDevDescriptionDialogProps) => {\n  const [description, setDescription] = useState('')\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    setDescription('');\n    setError(undefined);\n  }, [open]);\n\n  const handleConfirm = () => {\n    const errorMessage = validateDescription(description);\n    if (!errorMessage) {\n      onConfirm(trim(description));\n    } else {\n      setError(errorMessage);\n    }\n  }\n\n  const handleChange = (value: string) => {\n    setError(validateDescription(value));\n    setDescription(value);\n  }\n\n  return (\n      <Dialog open={open} onClose={onCancel}>\n        <DialogTitle>Self-dev description</DialogTitle>\n        <DialogContent>\n          <p>Short description is required to report a self-dev</p>\n          <TextField aria-label='self-dev description'\n                     multiline\n                     type='text'\n                     value={description}\n                     onChange={e => handleChange(e.target.value)}\n                     error={!!error}\n                     size='medium'\n                     helperText={error}\n                     fullWidth />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button onClick={handleConfirm}>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n","import { useState, KeyboardEvent } from 'react';\nimport { Paper } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport './WorkLogInput.scss'\nimport { WorkLogHelpDialog } from \"../workLogHelpDialog/WorkLogHelpDialog\";\nimport { WorkLogExpressionParser } from '../../../workLogExpressionParser/WorkLogExpressionParser';\nimport Autosuggest from 'react-autosuggest';\nimport { Suggestion } from '../../Suggestion';\nimport { difference, flatMap, isEmpty, noop } from 'lodash';\nimport { TagsSuggestionFactory } from './TagsSuggestionFactory';\nimport { DatesSuggestionFactory } from './DatesSuggestionFactory';\nimport { ConfirmNewTagsDialog } from '../confirmNewTagsDialog/ConfirmNewTagsDialog';\nimport { ParsedWorkLog } from '../../../workLogExpressionParser/ParsedWorkLog';\nimport { ValidationStatus } from './ValidationStatus';\nimport { Preset } from '../registration.model';\nimport { SelfDevDescriptionDialog } from '../selfDevDescriptionDialog/SelfDevDescriptionDialog';\n\nexport interface WorkLogInputProps {\n  workLog: ParsedWorkLog;\n  tags: string[];\n  presets: Preset[];\n  onChange: (workLog: ParsedWorkLog) => void;\n  onSave: (workLog: ParsedWorkLog) => void;\n  autoAddedTagsMapping: Map<string, string[]>;\n}\n\nconst renderInputComponent = inputProps => {\n  const {inputRef = noop, ref, ...other} = inputProps;\n  return (\n      <InputBase fullWidth\n                 inputRef={node => {\n                   ref(node);\n                   inputRef(node);\n                 }}\n                 {...other}/>\n  );\n};\n\nconst renderSuggestion = (suggestion, {query, isHighlighted}) => (\n    <Suggestion isHighlighted={isHighlighted} suggestion={suggestion} query={query}/>\n);\n\nconst workLogExpressionParser = new WorkLogExpressionParser();\n\nexport const WorkLogInput = ({workLog, onChange, autoAddedTagsMapping, tags, presets, onSave}: WorkLogInputProps) => {\n  const [helpOpen, setHelpOpen] = useState(false)\n  const [suggestions, setSuggestions] = useState([]);\n  const [newTags, setNewTags] = useState([]);\n  const [selfDevDialogVisible, setSelfDevDialogVisible] = useState(false);\n\n  const handleInputChange = (event, {newValue}) => {\n    const workLog = workLogExpressionParser.parse(newValue);\n    const tagsWithAutoAddMapping = workLog.tags.filter(tag => autoAddedTagsMapping.has(tag));\n    const autoAddedTags = flatMap(tagsWithAutoAddMapping, tag => autoAddedTagsMapping.get(tag));\n    onChange(workLog.withAddedTags(autoAddedTags));\n  };\n\n  const handleSubmit = (event: KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      if (workLog.validate().valid) {\n        const newTags = difference(workLog.tags, tags);\n        if (workLog.tags.includes('self-dev')) {\n          setSelfDevDialogVisible(true);\n        } else if (isEmpty(newTags)) {\n          onSave(workLog);\n        } else {\n          setNewTags(newTags);\n        }\n      }\n    }\n  };\n\n  const getLastWord = (text: string) => text.trim()\n      .split(/[\\s,]+/)\n      .pop();\n\n  const shouldRenderSuggestions = (text: string) => {\n    const lastWord = getLastWord(text);\n    return lastWord ? lastWord.startsWith('#') || lastWord.startsWith('@') : false;\n  };\n\n  const getSuggestions = (text: string) => {\n    const lastWord = getLastWord(text);\n    if (isEmpty(lastWord)) {\n      return [];\n    } else if (lastWord.startsWith('#')) {\n      return new TagsSuggestionFactory(tags, presets).suggestions(text, lastWord);\n    } else if (lastWord.startsWith('@')) {\n      return new DatesSuggestionFactory().suggestions(text, lastWord);\n    }\n    return [];\n  };\n\n  const handleConfirmationDialogClose = (workLog: ParsedWorkLog, result: boolean) => {\n    if (result) {\n      onSave(workLog);\n    }\n    setNewTags([]);\n  };\n\n  const handleSelfDevDescriptionProvided = (description: string) => {\n    onSave(workLog.withNote(description));\n    setSelfDevDialogVisible(false);\n  }\n\n  return (\n      <Paper className='work-log-input' elevation={1}>\n        <Autosuggest\n            renderInputComponent={renderInputComponent}\n            getSuggestionValue={s => s.value}\n            inputProps={{\n              className: 'work-log-input__input',\n              placeholder: '1d #my-project',\n              value: workLog.expression,\n              autoFocus: true,\n              onChange: handleInputChange,\n              onKeyPress: handleSubmit\n            }}\n            onSuggestionsFetchRequested={({value}) => setSuggestions(getSuggestions(value))}\n            onSuggestionsClearRequested={() => setSuggestions([])}\n            onSuggestionSelected={e => e.preventDefault()}\n            shouldRenderSuggestions={shouldRenderSuggestions}\n            renderSuggestion={renderSuggestion}\n            suggestions={suggestions}\n            renderSuggestionsContainer={options => (\n                <Paper {...options.containerProps}>\n                  {options.children}\n                </Paper>\n            )}\n        />\n        <ValidationStatus workLog={workLog}/>\n        <IconButton aria-label='Help' onClick={() => setHelpOpen(true)}>\n          <HelpIcon color='primary'/>\n        </IconButton>\n        <WorkLogHelpDialog open={helpOpen} onClose={() => setHelpOpen(false)}/>\n        <ConfirmNewTagsDialog workLog={workLog}\n                              newTags={newTags}\n                              onClose={handleConfirmationDialogClose}\n                              open={!isEmpty(newTags)}/>\n        <SelfDevDescriptionDialog open={selfDevDialogVisible}\n                                  onCancel={() => setSelfDevDialogVisible(false)}\n                                  onConfirm={handleSelfDevDescriptionProvided} />\n      </Paper>\n  );\n}\n","import { MonthDTO } from '../api/dtos';\nimport { CALENDAR_CONSTANTS } from './constants';\n\nexport const loadMonthAction = () => ({\n  type: CALENDAR_CONSTANTS.LOAD_MONTH\n});\n\nexport const monthChangedAction = (year: number, month: number) => ({\n  type: CALENDAR_CONSTANTS.MONTH_CHANGED,\n  payload: {year, month}\n});\n\nexport type MonthChangedAction = ReturnType<typeof monthChangedAction>;\n\nexport const monthLoadedAction = (month: MonthDTO) => ({\n  type: CALENDAR_CONSTANTS.MONTH_LOADED,\n  payload: month\n});\n","import { REGISTRATION_CONSTANTS, WORK_LOG_CONSTANTS } from './constants';\nimport { BulkEditDTO, ReportingWorkLogDTO } from '../api/dtos';\nimport { ParsedWorkLog } from '../workLogExpressionParser/ParsedWorkLog';\n\nexport const loadWorkLogsAction = () => ({\n  type: WORK_LOG_CONSTANTS.LOAD_WORK_LOGS\n});\n\nexport const workLogLoadedAction = entries => ({\n  type: WORK_LOG_CONSTANTS.WORK_LOGS_LOADED,\n  payload: entries\n});\n\nexport const loadTagsAction = (numberOfPastMonths?: number) => ({\n  type: WORK_LOG_CONSTANTS.LOAD_TAGS,\n  payload: numberOfPastMonths\n});\n\nexport const tagsLoadedAction = tags => ({\n  type: WORK_LOG_CONSTANTS.TAGS_LOADED,\n  payload: tags\n});\n\nexport const updateWorkLogAction = (id: string, tags: string[], workload: string) => ({\n  type: WORK_LOG_CONSTANTS.UPDATE_WORK_LOG,\n  payload: {id, tags, workload}\n});\n\nexport const workLogUpdatedAction = (workLog: ReportingWorkLogDTO) => ({\n  type: WORK_LOG_CONSTANTS.WORK_LOG_UPDATED,\n  payload: workLog\n});\n\nexport const removeWorkLogAction = (id: string) => ({\n  type: WORK_LOG_CONSTANTS.REMOVE_WORK_LOG,\n  payload: id\n});\n\nexport const workLogRemovedAction = (id: string) => ({\n  type: WORK_LOG_CONSTANTS.WORK_LOG_REMOVED,\n  payload: id\n});\n\nexport const bulkEditAction = (editDto: BulkEditDTO) => ({\n  type: WORK_LOG_CONSTANTS.BULK_EDIT_REQUEST,\n  payload: editDto\n});\n\nexport const bulkEditDoneAction = () => ({\n  type: WORK_LOG_CONSTANTS.BULK_EDIT_DONE\n});\n\nexport const workLogChangedAction = (workLog: ParsedWorkLog) => ({\n  type: REGISTRATION_CONSTANTS.WORK_LOG_CHANGED,\n  payload: {\n    days: workLog.days,\n    tags: workLog.tags,\n    workload: workLog.workload,\n    expression: workLog.expression,\n    valid: workLog.validate().valid\n  }\n});\n\nexport const saveWorkLogAction = (workLog: ParsedWorkLog) => ({\n  type: WORK_LOG_CONSTANTS.SAVE_WORK_LOG,\n  payload: workLog\n});\n\nexport const workLogSavedAction = () => ({\n  type: REGISTRATION_CONSTANTS.WORK_LOG_SAVED\n});\n","import { useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport './RulesDialog.scss'\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const RulesDialog = () => {\n  const [open, setOpen] = useState(false);\n  return (\n      <span>\n          <IconButton className='work-log-input__help' aria-label='Help' onClick={() => setOpen(true)}>\n            <HelpIcon color='primary'/>\n          </IconButton>\n          <Dialog open={open} className='rules-dialog'>\n            <DialogTitle>Zasady</DialogTitle>\n            <DialogContent>\n              <div>\n                  <p>Rejestrowanie dla <strong>projektu</strong>, np.:</p>\n                  <code>#projects #rightmove</code>\n                  <code>#projects #talkie</code>\n              </div>\n              <div>\n                  <p>Rejestrowanie <strong>prowadzenia szkolenia</strong>, np:</p>\n                  <code>#trainings #open-training</code>\n                  <code>#trainings #coaching #orange</code>\n              </div>\n              <div>\n                  <p>Rejestrowanie <strong>przygotowania do szkolenia</strong>, np:</p>\n                  <code>#trainings #preparation #nokia</code>\n              </div>\n              <div>\n                  <p>Rejestrowanie <strong>wewnętrznego czasu</strong>:</p>\n                  <code>#internal #brown-bag</code>\n                  <code>#internal #recruitment</code>\n                  <code>#internal #lean-coffee</code>\n                  <code>#internal #self-development #conference</code>\n                  <code>#internal #JUnitParams</code>\n                  <code>#internal #standup</code>\n              </div>\n              <div>\n                  <p>Rejestrowanie <strong>chorób i urlopów:</strong>\n                  </p>\n                  <code>#sick</code>\n                  <code>#vacation</code>\n              </div>\n              <div>\n                  <p>Zasady dla nowych tagów są następujące:</p>\n                  <ul>\n                      <li>słowa oddzielamy minusami, a nie CamelCase</li>\n                      <li>projekty dla jednego klienta prefiksujemy nazwą klienta</li>\n                  </ul>\n                  <p>Rejestrujemy urlopy i choroby, niezależnie od rodzaju umowy.</p>\n                  <p>Efekt oczekiwany jest taki, że na koniec miesiąca każdy ma zarejestrowane tyle samo godzin\n                    (w zależności od liczby dni pracujących w miesiącu), z dokładnością do ewentualnych nadgodzin i prac weekendowych.\n                  </p>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setOpen(false)} color='primary'>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </span>\n  );\n}\n","import { round } from 'lodash';\n\nexport function formatWorkload(workload: number): string {\n  if (workload === null || workload === undefined || workload < 0) {\n    return 'INVALID';\n  }\n  if (workload === 0) {\n    return '0h';\n  }\n  const days = Math.floor(workload / (8 * 60));\n  const daysRemainder = workload % (8 * 60);\n  const hours = Math.floor(daysRemainder / 60);\n  const minutes = daysRemainder % 60;\n  return [\n    days > 0 ? `${days}d` : undefined,\n    hours > 0 ? `${hours}h` : undefined,\n    minutes > 0 ? `${minutes}m` : undefined\n  ].filter(v => v !== undefined)\n      .join(' ');\n}\n\nexport function workloadAsDays(workload: number): number {\n  return workload ? round(workload / 60, 2) : workload;\n}\n","import {FunctionComponent} from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { isNil } from 'lodash';\nimport { MonthlyReportDay } from './MonthlyReport.model';\nimport TableCell from '@material-ui/core/TableCell';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { workloadAsDays } from '../../utils/workloadUtils';\n\ninterface ReportCellProps {\n  day: MonthlyReportDay;\n  selected?: boolean;\n  'data-testid'?: string;\n  onClick: (day: MonthlyReportDay, range: boolean) => void;\n}\n\nexport const ReportCell: FunctionComponent<ReportCellProps> = ({children, day, selected, onClick, 'data-testid': dataTestId}) => {\n  const cellClass = classNames('report-table__cell', {\n    'report-table__cell--weekend': day.weekend,\n    'report-table__cell--holiday': day.holiday,\n    'report-table__cell--selected': selected\n  });\n\n  const onCellClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onClick(day, e.shiftKey);\n  }\n  return (\n      <TableCell className={cellClass} onClick={onCellClick} data-testid={dataTestId}>\n        {children}\n      </TableCell>\n  );\n}\n\ninterface WorkloadTableCellProps extends ReportCellProps {\n  workload: number;\n}\n\nexport const ReportWorkloadCell = (props: WorkloadTableCellProps) => {\n  const {day, workload} = props;\n  const dayDate = moment(day.id, 'YYYY/MM/DD');\n  const now = moment();\n  const previousMonth = now.month() > dayDate.month() || now.year() > dayDate.year();\n  const missingWorkload = previousMonth && isNil(workload) && !day.holiday && !day.weekend;\n  return (\n      <ReportCell {...props}>\n        <div>\n          {missingWorkload ? <ErrorIcon className='missing-workload-icon' data-testid='missing-workload-icon'/> : workloadAsDays(workload)}\n        </div>\n      </ReportCell>\n  )\n};\n\nexport const ReportHeaderCell = (props: ReportCellProps) => {\n  const dayDate = moment(props.day.id, 'YYYY/MM/DD');\n  return (\n      <ReportCell {...props}>\n        <div>{dayDate.date()}</div>\n        <div className='day-name'>{dayDate.format('ddd')}</div>\n      </ReportCell>\n  );\n}\n","import './MonthlyReport.scss';\nimport { MonthlyReportDay, WorkLog } from \"./MonthlyReport.model\";\nimport { Table } from \"@material-ui/core\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { chain, entries, noop, reduce, size, values } from 'lodash';\nimport classNames from 'classnames';\nimport { daysInRange } from '../../utils/dateTimeUtils';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { ReportHeaderCell, ReportWorkloadCell } from './ReportCell';\nimport { workloadAsDays } from '../../utils/workloadUtils';\n\ninterface ReportDay extends MonthlyReportDay {\n  selected: boolean;\n}\n\nconst Footer = ({days, workLogs}: { days: MonthlyReportDay[]; workLogs: { [employee: string]: WorkLog[] } }) => {\n  const workloadForDay = chain(values(workLogs))\n      .flatten()\n      .groupBy(w => w.day)\n      .mapValues(value => reduce(value, (sum, w) => sum + w.workload, 0))\n      .value();\n  const total = chain(workloadForDay)\n      .values()\n      .sum()\n      .value();\n\n  const cellClass = (day: MonthlyReportDay) => classNames('report-table__cell', {\n    'report-table__cell--weekend': day.weekend,\n    'report-table__cell--holiday': day.holiday\n  });\n\n  return (\n      <TableFooter>\n        <TableRow className='report-table__row' data-testid='table-footer-row'>\n          <TableCell className='report-table__cell report-table__cell--bold'>Total</TableCell>\n          {days.map((day, idx) => (\n              <TableCell key={idx} className={cellClass(day)}>\n                {workloadAsDays(workloadForDay[day.id])}\n              </TableCell>\n          ))}\n          <TableCell className='report-table__cell report-table__cell--bold' data-total-value>{workloadAsDays(total)}</TableCell>\n        </TableRow>\n      </TableFooter>\n  );\n}\n\ninterface EmployeeRowProps {\n  employee: string;\n  workLogs: WorkLog[];\n  singleEmployee: boolean;\n  days: ReportDay[];\n  onCellClick: (day: MonthlyReportDay, range: boolean) => void;\n}\n\nconst EmployeeRow = ({employee, workLogs, singleEmployee, days, onCellClick}: EmployeeRowProps) => {\n  const workloadForDay = chain(workLogs)\n      .groupBy(w => w.day)\n      .mapValues(value => reduce(value, (sum, w) => sum + w.workload, 0))\n      .value();\n  const total = chain(workloadForDay)\n      .values()\n      .sum()\n      .value();\n  return (\n      <TableRow key={employee} className='report-table__row' data-testid='employee-row'>\n        {!singleEmployee && <TableCell className='report-table__cell'>{employee}</TableCell>}\n        {days.map((day, idx) => (\n            <ReportWorkloadCell key={idx}\n                                day={day}\n                                workload={workloadForDay[day.id]}\n                                selected={day.selected}\n                                onClick={onCellClick}\n                                data-testid='month-day-value'/>\n        ))}\n        <TableCell className='report-table__cell report-table__cell--bold' data-testid='month-total-value'>\n          {workloadAsDays(total)}\n        </TableCell>\n      </TableRow>\n  );\n}\n\ninterface MonthlyReportProps {\n  days: MonthlyReportDay[];\n  workLogs: { [employee: string]: WorkLog[] },\n  selectedDays?: string[];\n  onSelect?: (days: string[]) => void\n}\n\nexport const MonthlyReport = ({workLogs, days = [], selectedDays = [], onSelect = noop}: MonthlyReportProps) => {\n  const workLogEntries = entries(workLogs);\n  const singleEmployee = workLogEntries.length === 1;\n  const daysWithSelection = days.map(d => ({...d, selected: selectedDays.includes(d.id)}));\n\n  const onCellClick = (day: MonthlyReportDay, range: boolean) => {\n    if (range && size(selectedDays) === 1) {\n      onSelect(daysInRange(selectedDays[0], day.id));\n    } else {\n      onSelect([day.id]);\n    }\n  }\n\n  return (\n      <div className='monthly-report' data-testid='monthly-report'>\n        <Table className='monthly-report__report-table report-table'>\n          <TableHead>\n            <TableRow className='report-table__header-row'>\n              {!singleEmployee && <TableCell className='report-table__cell report-table__cell--bold'>Employee</TableCell>}\n              {daysWithSelection.map((day, idx) => (\n                  <ReportHeaderCell key={idx}\n                                    day={day}\n                                    selected={day.selected}\n                                    onClick={onCellClick}\n                                    data-testid='month-day-header'/>\n              ))}\n              <TableCell className='report-table__cell report-table__cell--bold header-cell'>Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {workLogEntries.map(entry => (\n                <EmployeeRow key={entry[0]}\n                             employee={entry[0]}\n                             workLogs={entry[1]}\n                             singleEmployee={singleEmployee}\n                             days={daysWithSelection}\n                             onCellClick={onCellClick}/>\n            ))}\n          </TableBody>\n          {\n            !singleEmployee && <Footer days={daysWithSelection} workLogs={workLogs}/>\n          }\n        </Table>\n      </div>\n  );\n}\n","import { MonthlyReport } from '../monthlyReport/MonthlyReport';\nimport Button from '@material-ui/core/Button';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Paper from '@material-ui/core/Paper';\nimport { DayDTO } from '../../api/dtos';\nimport { WorkLog } from '../monthlyReport/MonthlyReport.model';\nimport { Divider } from '@material-ui/core';\nimport { Month } from '../../utils/Month';\nimport './RegistrationPageMonth.scss';\n\ninterface Props {\n  selectedMonth: Month,\n  days: DayDTO[];\n  workLogs: { [employee: string]: WorkLog[] }\n  onChange: (month: Month) => void;\n  onDaysSelected?: (days: string[]) => void;\n  selectedDays?: string[];\n}\n\nexport const RegistrationPageMonth = ({days, workLogs, selectedMonth, selectedDays, onDaysSelected, onChange}: Props) => (\n    <div className='registration-page-month'>\n      <div className='registration-page-month__header'>\n        <span>{selectedMonth.toString()}</span> month worklog\n      </div>\n      <Divider variant='fullWidth'/>\n      <div className='registration-page-month__description'>\n        <span>Click</span> on date to set it on worklog expression\n      </div>\n      <div className='registration-page-month__description'>\n        <span>Shift + Click</span> on date to set dates range on worklog expression\n      </div>\n      <Paper>\n        <MonthlyReport days={days}\n                       workLogs={workLogs}\n                       selectedDays={selectedDays}\n                       onSelect={onDaysSelected}/>\n      </Paper>\n      <div className='registration-page-month__navigate-section'>\n        <Button variant='contained'\n                color='primary'\n                onClick={() => onChange(selectedMonth.previous)}>\n          <NavigateBeforeIcon/>\n          Previous\n        </Button>\n        <Button variant='contained'\n                color='primary'\n                onClick={() => onChange(selectedMonth.next)}>\n          Next\n          <NavigateNextIcon/>\n        </Button>\n      </div>\n    </div>\n);\n","import { REGISTRATION_CONSTANTS } from './constants';\nimport { Preset } from '../components/registrationPage/registration.model';\n\nexport const loadPresetsAction = (limit?: number) => ({\n  type: REGISTRATION_CONSTANTS.LOAD_PRESETS,\n  payload: limit\n});\n\nexport type LoadPresetsAction = ReturnType<typeof loadPresetsAction>;\n\nexport const presetsLoadedAction = (presets: Preset[]) => ({\n  type: REGISTRATION_CONSTANTS.PRESETS_LOADED,\n  payload: presets\n});\n","import moment from 'moment';\n\nexport class Month {\n  constructor(readonly year: number, readonly month: number) {\n  }\n\n  get next(): Month {\n    if (this.month === 12) {\n      return new Month(this.year + 1, 1);\n    }\n    return new Month(this.year, this.month + 1);\n  }\n\n  get previous(): Month {\n    if (this.month === 1) {\n      return new Month(this.year - 1, 12);\n    }\n    return new Month(this.year, this.month - 1);\n  }\n\n  range(numberOfPrevious: number, numberOfNext: number): Month[] {\n    return [...Month.previousMonths(this, numberOfPrevious), this, ...Month.nextMonths(this, numberOfNext)]\n  }\n\n  minus(numberOfMonths: number): Month {\n    if (numberOfMonths === 0) {\n      return this;\n    }\n    return this.previous.minus(numberOfMonths - 1);\n  }\n\n  plus(numberOfMonths: number): Month {\n    if (numberOfMonths === 0) {\n      return this;\n    }\n    return this.next.plus(numberOfMonths - 1);\n  }\n\n  isBefore(other: Month): boolean {\n    return this.year < other.year || (this.year === other.year && this.month < other.month);\n  }\n\n  toString(): string {\n    return moment([this.year, this.month - 1, 1]).format('YYYY/MM')\n  }\n\n  static get current(): Month {\n    const today = moment();\n    return new Month(today.year(), today.month() + 1);\n  }\n\n  private static nextMonths(month: Month, numberOfNext: number): Month[] {\n    if (numberOfNext === 0) {\n      return [];\n    }\n    const next = month.next;\n    return [next, ...Month.nextMonths(next, numberOfNext - 1)];\n  }\n\n  private static previousMonths(month: Month, numberOfPrevious: number): Month[] {\n    if (numberOfPrevious === 0) {\n      return [];\n    }\n    const previous = month.previous;\n    return [...Month.previousMonths(previous, numberOfPrevious - 1), previous];\n  }\n}\n","import { useEffect } from 'react';\nimport './RegistrationPage.desktop.scss'\nimport Divider from \"@material-ui/core/Divider\";\nimport { WorkLogInput } from \"./workLogInput/WorkLogInput\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport { loadMonthAction, monthChangedAction } from '../../actions/calendar.actions';\nimport { AuthorizedUser } from '../../api/dtos';\nimport { loadTagsAction, saveWorkLogAction, workLogChangedAction } from '../../actions/workLog.actions';\nimport { isEmpty } from 'lodash';\nimport { RulesDialog } from './rulesDialog/RulesDialog';\nimport { RegistrationPageMonth } from '../registrationPageMonth/RegistrationPageMonth';\nimport { ParsedWorkLog } from '../../workLogExpressionParser/ParsedWorkLog';\nimport { loadPresetsAction } from '../../actions/registration.actions';\nimport { Month } from '../../utils/Month';\nimport { extractAutoAddedTagsMapping } from '../../utils/tagUtils'\nimport { selectedMonthSelector } from '../../selectors/selectors';\n\nconst workLogsSelector = (state: OpenTrappState) => {\n  const {name} = state.authentication.user || {} as AuthorizedUser;\n  const {workLogs} = state.workLog;\n  if (!workLogs) {\n    return {};\n  }\n  const filteredWorkLogs = workLogs\n      .filter(w => w.employee === name)\n      .map(w => ({day: w.day, workload: w.workload}));\n  return {[name]: filteredWorkLogs};\n}\n\nconst AUTO_ADDED_TAGS_MAPPING = extractAutoAddedTagsMapping();\n\nexport const RegistrationPageDesktop = () => {\n  const presets = useSelector((state: OpenTrappState) => state.registration.presets);\n  const tags = useSelector((state: OpenTrappState) => state.workLog.tags);\n  const days = useSelector((state: OpenTrappState) => state.calendar.days);\n  const selectedMonth = useSelector(selectedMonthSelector);\n  const workLogs = useSelector(workLogsSelector);\n  const workLog = useSelector((state: OpenTrappState) => {\n    const w = state.registration.workLog;\n    return new ParsedWorkLog(w.expression, w.days, w.tags, w.workload);\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMonthAction());\n    dispatch(loadTagsAction());\n    dispatch(loadPresetsAction());\n  }, [dispatch]);\n  const onMonthChange = (month: Month) => dispatch(monthChangedAction(month.year, month.month));\n  const onDaysSelected = (days: string[]) => dispatch(workLogChangedAction(workLog.withDays(days)));\n  const onWorkLogInputChange = (workLog: ParsedWorkLog) => dispatch(workLogChangedAction(workLog));\n  const onSaveWorkLog = (workLog: ParsedWorkLog) => dispatch(saveWorkLogAction(workLog));\n\n  return (\n      <div className='registration-page'>\n        <div className='registration-page__header'>\n          <span>Report your time</span> using our expression language, to make it quick!\n          <RulesDialog/>\n        </div>\n        <Divider variant='fullWidth'/>\n        <div className='registration-page__input'>\n          <WorkLogInput onChange={onWorkLogInputChange}\n                        onSave={onSaveWorkLog}\n                        workLog={workLog}\n                        tags={tags}\n                        presets={presets}\n                        autoAddedTagsMapping={AUTO_ADDED_TAGS_MAPPING}/>\n        </div>\n        <div>\n          {days && !isEmpty(workLogs) ?\n              <RegistrationPageMonth selectedMonth={new Month(selectedMonth.year, selectedMonth.month)}\n                                     selectedDays={workLog.days}\n                                     days={days}\n                                     workLogs={workLogs}\n                                     onChange={onMonthChange}\n                                     onDaysSelected={onDaysSelected}/> :\n              'Loading...'\n          }\n        </div>\n      </div>\n  );\n}\n","import {useEffect, useState} from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport {includes, isEmpty, sortBy, trim, uniq, xor} from 'lodash';\nimport List from '@material-ui/core/List';\nimport {ListItem} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Workload} from '../workload/Workload';\nimport {formatWorkload} from '../../../utils/workloadUtils';\nimport TextField from \"@material-ui/core/TextField\";\n\ninterface CreateWorkLogDialogProps {\n  onCancel: () => void;\n  onSave: (tags: string[], workload: string, description?: string) => void;\n  open: boolean;\n  tags: string[];\n  selectedTags?: string[];\n}\n\nenum View {\n  TAGS,\n  WORKLOAD\n}\n\nconst validateDescription = (description: string) => {\n  if (isEmpty(trim(description))) {\n    return 'Description cannot be empty'\n  } else if (description.length > 1000) {\n    return 'Description cannot be longer than 1000 characters'\n  }\n  return undefined\n}\n\nexport const CreateWorkLogDialog = ({open, onCancel, onSave, tags = [], selectedTags}: CreateWorkLogDialogProps) => {\n  const [selected, setSelected] = useState([]);\n  const [view, setView] = useState(View.TAGS);\n  const [hours, setHours] = useState(8);\n  const [minutes, setMinutes] = useState(0);\n  const [description, setDescription] = useState('');\n  const [descriptionError, setDescriptionError] = useState(undefined);\n\n  useEffect(() => {\n    if (selectedTags) {\n      setSelected(selectedTags);\n      setView(View.WORKLOAD);\n    }\n  }, [selectedTags]);\n\n  const workload = formatWorkload(hours * 60 + minutes);\n  const sortedTags = sortBy(uniq(tags.map(trim)));\n  const selfDevSelected = selected.includes('self-dev');\n\n  const handleCancel = () => {\n    onCancel();\n    setSelected([]);\n    setView(View.TAGS);\n    setHours(8);\n    setMinutes(0);\n    setDescription('');\n    setDescriptionError(undefined);\n  }\n\n  const handleSave = () => {\n    const errorMessage = selfDevSelected ? validateDescription(description) : undefined;\n    if (!errorMessage) {\n      onSave(selected, workload, selfDevSelected ? trim(description) : undefined);\n      handleCancel()\n    } else {\n      setDescriptionError(errorMessage);\n    }\n  };\n\n  const handleDescriptionChange = (value: string) => {\n    setDescriptionError(validateDescription(value));\n    setDescription(value)\n  }\n\n  return (\n      <Dialog open={open} onClose={handleCancel} fullWidth={true}>\n        <DialogTitle>Create Work Log</DialogTitle>\n        <DialogContent>\n          {\n            view === View.TAGS && <TagList tags={sortedTags} selected={selected} onClick={t => setSelected(xor(selected, [t]))} />\n          }\n          {\n            view === View.WORKLOAD && <Workload hours={hours} minutes={minutes} onHoursChange={v => setHours(v)} onMinutesChange={v => setMinutes(v)} />\n          }\n          {\n            view === View.WORKLOAD && selfDevSelected && <TextField aria-label='self-dev description'\n                                                                    label='Self-dev description'\n                                                                    multiline\n                                                                    type='text'\n                                                                    value={description}\n                                                                    onChange={e => handleDescriptionChange(e.target.value)}\n                                                                    size='medium'\n                                                                    error={!!descriptionError}\n                                                                    helperText={descriptionError}\n                                                                    fullWidth />\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel}>Cancel</Button>\n          {view === View.TAGS && <Button onClick={() => setView(View.WORKLOAD)} disabled={isEmpty(selected)} color='primary' autoFocus>\n            Next\n          </Button>}\n          {view === View.WORKLOAD && <Button onClick={handleSave} color='primary' autoFocus>Save</Button>}\n        </DialogActions>\n      </Dialog>\n  );\n}\n\nconst TagList = ({tags, selected, onClick}: { tags: string[]; selected: string[]; onClick: (tag: string) => void }) => (\n    <List>\n      {tags.map(tag => (\n          <ListItem dense button key={tag}\n                    role={undefined}\n                    onClick={() => onClick(tag)}\n                    data-tag={tag} data-testid='tag'>\n            <Checkbox checked={includes(selected, tag)}\n                      color='primary'\n                      tabIndex={-1}\n                      disableRipple />\n            <ListItemText primary={tag} />\n          </ListItem>\n      ))}\n    </List>\n);\n","import {forEach, union} from \"lodash\";\n\nexport function toReversedMap<T extends any>(mappingObject: {[key: string] : T[]}): Map<T, string[]> {\n    const reversedMapping: Map<T, string[]> = new Map();\n    forEach(mappingObject, (value, key) => {\n        value && value.forEach(v => {\n            reversedMapping.set(v, union(reversedMapping.get(v), [key]))\n        })\n    });\n\n    return reversedMapping;\n}","import * as tagsConfig from \"../tagsConfig.json\";\nimport {toReversedMap} from \"./collectionUtils\";\n\nexport function extractAutoAddedTagsMapping(): Map<string, string[]> {\n    return toReversedMap(tagsConfig.autoSubTags);\n}","\nexport const SettingsPageDesktop = () => (\n    <div>\n      Settings page desktop\n    </div>\n);\n","import moment from 'moment';\nimport { Fab } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBackIos';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport './DaySelector.scss';\n\ninterface DaySelectorProps {\n  selectedDay: string;\n  onChange: (newSelection: string) => void;\n}\n\nexport const DaySelector = ({selectedDay, onChange}: DaySelectorProps) => {\n  const day = moment(selectedDay, 'YYYY/MM/DD');\n  const today = day.isSame(moment(), 'day');\n  const todayText = today ? ' (today)' : '';\n  return (\n      <div className='day-selector'>\n        <div className='day-selector__name'>{day.format('dddd') + todayText}</div>\n        <div className='day-selector__selector selector'>\n          <Fab aria-label='Previous'\n               onClick={() => onChange(day.subtract(1, 'days').format('YYYY/MM/DD'))}\n               data-testid='day-selector-previous'>\n            <ArrowBack />\n          </Fab>\n          <div className='selector__date'>\n            {day.format('DD.MM.YYYY')}\n          </div>\n          <Fab aria-label='Next'\n               onClick={() => onChange(day.add(1, 'days').format('YYYY/MM/DD'))}\n               data-testid='day-selector-next'>\n            <ArrowForward />\n          </Fab>\n        </div>\n      </div>\n  );\n};\n","import { formatWorkload } from '../../utils/workloadUtils';\nimport { Chip } from '@material-ui/core';\nimport './WorkLogChip.scss';\n\ninterface WorkLog {\n  id?: string;\n  workload: number\n  projectNames: string[];\n}\n\ninterface Props {\n  onDelete?: (workLogId: string) => void;\n  workLog: WorkLog;\n  size?: 'small' | 'big';\n}\n\nexport const WorkLogChip = ({onDelete, workLog, size}: Props) => (\n    <Chip data-testid='work-log'\n          className={size === 'big' ? 'work-log work-log--big' : 'work-log'}\n          onDelete={onDelete ? () => onDelete(workLog.id) : undefined}\n          label={<ChipLabel projectNames={workLog.projectNames} workload={workLog.workload} />} />\n);\n\ninterface LabelProps {\n  projectNames: string[];\n  workload: number;\n}\n\nconst ChipLabel = ({projectNames, workload}: LabelProps) => (\n    <div className='chip-label'>\n      <div className='chip-label__projects' data-testid='chip-label'>{projectNames.join(', ')}</div>\n      <div className='chip-label__workload' data-testid='chip-workload'>{formatWorkload(workload)}</div>\n    </div>\n);\n","import { ReportingWorkLogDTO } from '../../../api/dtos';\nimport './WorkLogs.scss';\nimport List from '@material-ui/core/List';\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { WorkLogChip } from '../../workLogChip/WorkLogChip';\n\ninterface Props {\n  workLogs: ReportingWorkLogDTO[];\n  onDelete: (workLogId: string) => void;\n}\n\nexport const WorkLogs = ({workLogs, onDelete}: Props) => {\n  const workloadDesc = (workLog1, workLog2) => workLog2.workload - workLog1.workload;\n  return (\n      <List className='work-logs'>\n        <ListSubheader className='work-logs__title'>Reported time</ListSubheader>\n        {workLogs.sort(workloadDesc)\n            .map(workLog => (\n                <ListItem key={workLog.id}>\n                  <WorkLogChip onDelete={onDelete} workLog={workLog} size='big'/>\n                </ListItem>\n            ))\n        }\n      </List>\n  );\n};\n","import { Slider } from \"@material-ui/core\";\nimport './Workload.scss';\n\ninterface Props {\n  readonly hours: number;\n  readonly minutes: number;\n  readonly onHoursChange: (number) => void;\n  readonly onMinutesChange: (number) => void;\n}\n\nexport const Workload = ({hours, minutes, onHoursChange, onMinutesChange}: Props) => (\n    <div className='workload-selector' data-testid='workload-selector'>\n      <div data-testid='number-of-hours'>{hours} {hours === 1 ? 'hour' : 'hours'}</div>\n      <Slider min={0}\n              max={16}\n              step={1}\n              value={hours}\n              onChange={(event, value) => onHoursChange(value)}\n              className='workload-selector__slider slider'\n              data-testid='hours-slider'/>\n      <div data-testid='number-of-minutes'>{minutes} minutes</div>\n      <Slider min={0}\n              max={60}\n              step={15}\n              value={minutes}\n              onChange={(event, value) => onMinutesChange(value)}\n              className='workload-selector__slider slider'\n              data-testid='minutes-slider'/>\n    </div>\n);\n","import { v4 as uuid } from 'uuid';\nimport { NOTIFICATIONS_CONSTANTS } from '../actions/constants';\n\nenum NotificationType {\n  INFO = 'INFO',\n  ERROR = 'ERROR'\n}\n\nexport class Notification {\n  readonly id: string;\n\n  private constructor(readonly message: string, readonly type: NotificationType) {\n    this.id = uuid();\n  }\n\n  static info(message: string): Notification {\n    return new Notification(message, NotificationType.INFO);\n  }\n\n  static error(message: string): Notification {\n    return new Notification(message, NotificationType.ERROR);\n  }\n}\n\nexport interface NotificationsState {\n  notifications: Notification[];\n}\n\nexport const initialState: () => NotificationsState = () => ({\n  notifications: []\n});\n\nexport function notifications(state = initialState(), action): NotificationsState {\n  switch (action.type) {\n    case NOTIFICATIONS_CONSTANTS.NOTIFICATION_CREATED:\n      return {\n        notifications: [...state.notifications, action.payload]\n      };\n    case NOTIFICATIONS_CONSTANTS.NOTIFICATION_DISMISSED:\n      return {\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {isNil} from 'lodash';\nimport {OpenTrappState} from '../../redux/root.reducer';\nimport {\n  loadTagsAction,\n  loadWorkLogsAction,\n  removeWorkLogAction,\n  saveWorkLogAction,\n  workLogChangedAction\n} from '../../actions/workLog.actions';\nimport {DaySelector} from './daySelector/DaySelector';\nimport {ParsedWorkLog} from '../../workLogExpressionParser/ParsedWorkLog';\nimport {loadPresetsAction} from '../../actions/registration.actions';\nimport {Preset} from './registration.model';\nimport {WorkLogs} from './workLogs/WorkLogs';\nimport {CreateWorkLogDialog} from './createWorkLogDialog/CreateWorkLogDialog';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Chip from '@material-ui/core/Chip';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport './RegistrationPage.mobile.scss';\n\nconst forSelectedDay = (state: OpenTrappState) => workLog => workLog.day === state.registration.workLog.days[0];\n\nconst forCurrentUser = (state: OpenTrappState) => workLog => workLog.employee === state.authentication.user.name;\n\nexport const RegistrationPageMobile = () => {\n  const [selectedPreset, setSelectedPreset] = useState(undefined as Preset);\n  const [customWorkLogDialogOpen, setCustomWorkLogDialogOpen] = useState(false);\n  const presets = useSelector((state: OpenTrappState) => state.registration.presets);\n  const tags = useSelector((state: OpenTrappState) => state.workLog.tags);\n  const workLogs = useSelector((state: OpenTrappState) => state.workLog.workLogs.filter(forSelectedDay(state)).filter(forCurrentUser(state)));\n  const workLog = useSelector((state: OpenTrappState) => {\n    const {expression, workload, days, tags} = state.registration.workLog;\n    return new ParsedWorkLog(expression, days, tags, workload);\n  })\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadWorkLogsAction());\n    dispatch(loadTagsAction(6));\n    dispatch(loadPresetsAction());\n  }, [dispatch]);\n\n  const selectedDay = workLog.days[0];\n\n  const handleCancel = () => {\n    setCustomWorkLogDialogOpen(false);\n    setSelectedPreset(undefined);\n  }\n\n  const handleSave = (tags: string[], workload: string, description?: string) => {\n    const workLog = ParsedWorkLog.from(tags, selectedDay, workload);\n    dispatch(saveWorkLogAction(workLog.withNote(description)));\n    handleCancel()\n  };\n\n  return (\n      <div className='registration-page-mobile'>\n        <DaySelector selectedDay={selectedDay} onChange={day => dispatch(workLogChangedAction((workLog.withDays([day]))))} />\n        <WorkLogs workLogs={workLogs} onDelete={workLogId => dispatch(removeWorkLogAction(workLogId))} />\n        <div className='presets-selector'>\n          <List className='presets-selector__list'>\n            <ListSubheader className='presets-selector__title'>Suggested projects</ListSubheader>\n            {\n              presets.map((preset, idx) => (\n                  <Chip key={idx}\n                        label={preset.tags.join(', ')}\n                        onClick={() => setSelectedPreset(preset)}\n                        className='presets-selector__chip chip'\n                        color={'primary'}\n                        data-testid='preset' />\n              ))\n            }\n          </List>\n        </div>\n        <CreateWorkLogDialog onSave={handleSave}\n                             onCancel={handleCancel}\n                             open={customWorkLogDialogOpen || !isNil(selectedPreset)}\n                             selectedTags={selectedPreset?.tags}\n                             tags={tags} />\n        <Fab onClick={() => setCustomWorkLogDialogOpen(true)}\n             color='primary'\n             className='registration-page-mobile__add-button add-button'\n             data-testid='custom-work-log-button'>\n          <AddIcon />\n        </Fab>\n      </div>\n  );\n}\n","\nexport const SettingsPageMobile = () => (\n    <div>\n      Settings mobile page\n    </div>\n);\n","import { ReportingWorkLogDTO } from '../../api/dtos';\n\nexport class ReportingWorkLog {\n  readonly id: string;\n  readonly employee: string;\n  readonly projectNames: string[];\n  readonly day: string;\n  readonly workload: number;\n\n  constructor(workLog: ReportingWorkLogDTO) {\n    this.id = workLog.id;\n    this.employee = workLog.employee;\n    this.projectNames = workLog.projectNames;\n    this.day = workLog.day;\n    this.workload = workLog.workload;\n  }\n}\n\nexport interface EditedWorkLog {\n  id: string;\n  workload: string;\n  projectNames: string[];\n}","import { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autosuggest from 'react-autosuggest';\nimport { Suggestion, SuggestionItem } from '../../../Suggestion';\nimport { Paper } from '@material-ui/core';\nimport { last, startsWith } from 'lodash';\nimport './TagsAutocompleteInput.scss';\n\ninterface TagsAutocompleteInputProps {\n  label?: string;\n  value: string;\n  className?: string;\n  tags: string[];\n  onChange: (value: string) => void;\n}\n\nconst renderSuggestion = (suggestion: SuggestionItem, {query, isHighlighted}) => (\n    <Suggestion isHighlighted={isHighlighted} query={query} suggestion={suggestion}/>\n);\n\nconst renderInputComponent = (inputProps) => {\n  const {classes, inputRef = () => {}, ref, ...other} = inputProps;\n  return (\n      <TextField fullWidth\n                 InputProps={{\n                   inputRef: node => {\n                     ref(node);\n                     inputRef(node);\n                   }\n                 }}\n                 {...other}\n                 data-testid='edit-project'/>\n  );\n};\n\nexport const TagsAutocompleteInput = ({value, tags, label = 'Projects', className = 'text-field', onChange}: TagsAutocompleteInputProps) => {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const getSuggestions = (text: string) => {\n    const prefix = last(text.split(',').map(t => t.trim()));\n    return tags\n        .filter(tag => startsWith(tag.toLowerCase(), prefix))\n        .slice(0, 5)\n        .map(tag => tag.trim())\n        .sort()\n        .map(tag => ({\n          label: tag,\n          value: text.replace(new RegExp(`${prefix}$`), `${tag}, `)\n        }));\n  };\n\n  return (\n      <div className='tags-autocomplete'>\n        <Autosuggest renderInputComponent={renderInputComponent}\n                     getSuggestionValue={v => v.value}\n                     inputProps={{\n                       className,\n                       value,\n                       label,\n                       onChange: (event, {newValue}) => onChange(newValue)\n                     } as any}\n                     onSuggestionsFetchRequested={({value}) => setSuggestions(getSuggestions(value))}\n                     onSuggestionsClearRequested={() => setSuggestions([])}\n                     renderSuggestion={renderSuggestion}\n                     renderSuggestionsContainer={options => (\n                         <Paper {...options.containerProps}>\n                           {options.children}\n                         </Paper>\n                     )}\n                     suggestions={suggestions}/>\n      </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { Dialog } from '@material-ui/core';\nimport { isEmpty, trim } from 'lodash';\nimport { EditedWorkLog, ReportingWorkLog } from '../reporting.model';\nimport TextField from '@material-ui/core/TextField';\nimport './EditWorkLogDialog.scss'\nimport { formatWorkload } from '../../../utils/workloadUtils';\nimport { TagsAutocompleteInput } from './tagsAutocompleteInput/TagsAutocompleteInput';\nimport { ReportingWorkLogDTO } from '../../../api/dtos';\n\ninterface EditWorkLogDialogProps {\n  workLog: ReportingWorkLog;\n  tags: string[];\n  onClose: (workLog?: EditedWorkLog) => void;\n  open: boolean;\n}\n\nexport const EditWorkLogDialog = ({workLog, open, onClose, tags}: EditWorkLogDialogProps) => {\n  const [workload, setWorkload] = useState('');\n  const [names, setNames] = useState('');\n  useEffect(() => {\n    const {projectNames = [], workload} = workLog || {} as ReportingWorkLogDTO;\n    setNames(projectNames.join(', '));\n    setWorkload(formatWorkload(workload));\n  }, [workLog]);\n\n  const onUpdateClick = () => {\n    const projectNames = names\n        .split(',')\n        .map(trim)\n        .filter(v => !isEmpty(v));\n    onClose({\n      id: workLog.id,\n      workload: workload,\n      projectNames\n    })\n  };\n\n  const {employee = '', day = ''} = workLog || {} as ReportingWorkLog;\n  return (\n      <Dialog open={open} onClose={() => onClose()} className='edit-work-log'>\n        <DialogTitle>Edit worklog entry</DialogTitle>\n        <DialogContent className='edit-work-log__content content' data-testid='edit-work-log-dialog-content'>\n          <TextField className='text-field'\n                     label='Workload'\n                     value={workload}\n                     onChange={e => setWorkload(e.target.value)}\n                     data-testid='edit-workload'/>\n          <TagsAutocompleteInput value={names} tags={tags} onChange={v => setNames(v)}/>\n          <TextField className='text-field' label='Employee' value={employee} disabled data-testid='edit-employee'/>\n          <TextField className='text-field' label='Date' value={day} disabled data-testid='edit-date'/>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => onClose()}>Cancel</Button>\n          <Button onClick={onUpdateClick} color='primary' autoFocus>Update</Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n","import { useState } from 'react';\nimport { EditedWorkLog, ReportingWorkLog } from '../reporting.model';\nimport { Table } from '@material-ui/core';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport { chain, groupBy, keys, size } from 'lodash';\nimport { formatWorkload } from '../../../utils/workloadUtils';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport './TableReport.scss';\nimport Button from '@material-ui/core/Button';\nimport { EditWorkLogDialog } from '../editWorkLogDialog/EditWorkLogDialog';\n\ninterface TableReportProps {\n  workLogs: ReportingWorkLog[];\n  tags: string[]\n  onRemoveWorkLog: (id: string) => void;\n  onEditWorkLog: (workLog: EditedWorkLog) => void;\n  username: string;\n}\n\nexport const TableReport = ({workLogs, tags, onEditWorkLog, onRemoveWorkLog, username}: TableReportProps) => {\n  const [editedWorkLog, setEditedWorkLog] = useState(undefined as ReportingWorkLog);\n\n  const workLogsByDay = groupBy(workLogs, w => w.day);\n  const days = keys(workLogsByDay);\n\n  const onEditWorkLogClick = (workLog: ReportingWorkLog) => setEditedWorkLog(workLog);\n\n  const onEditFinished = (workLog?: EditedWorkLog) => {\n    setEditedWorkLog(undefined);\n    if (workLog) {\n      onEditWorkLog(workLog);\n    }\n  }\n\n  const renderDay = (day: string, workLogs: ReportingWorkLog[]) => {\n    const workLogsByEmployee = groupBy(workLogs, w => w.employee);\n    const employees = keys(workLogsByEmployee);\n    const numberOfEntries = size(workLogs);\n    return chain(employees)\n        .map((employee, idx) => renderEmployee(day, employee, workLogsByEmployee[employee], idx, numberOfEntries))\n        .flatten()\n        .value();\n  }\n\n  const renderEmployee = (day: string, employee: string, workLogs: ReportingWorkLog[], employeeIdx: number, numberOfEntries: number) => {\n    return workLogs.map((workLog, idx) => (\n        <TableReportRow key={`${day}-${employee}-${idx}`}\n                        day={employeeIdx + idx === 0 ? {text: day, rowSpan: numberOfEntries} : undefined}\n                        employee={idx === 0 ? {text: employee, rowSpan: size(workLogs)} : undefined}\n                        username={username}\n                        workLog={workLog}\n                        onEdit={() => onEditWorkLogClick(workLog)}\n                        onRemove={() => onRemoveWorkLog(workLog.id)}/>\n    ));\n  }\n\n  return (\n      <div className='table-report' data-testid='table-report'>\n        <EditWorkLogDialog workLog={editedWorkLog}\n                           tags={tags}\n                           onClose={onEditFinished}\n                           open={editedWorkLog !== undefined}/>\n        <Table className='table-report__table table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Employee</TableCell>\n              <TableCell>Workload</TableCell>\n              <TableCell>Project</TableCell>\n              <TableCell padding='checkbox'/>\n              <TableCell padding='checkbox'/>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              chain(days)\n                  .reverse()\n                  .map(day => renderDay(day, workLogsByDay[day]))\n                  .flatten()\n                  .value()\n            }\n          </TableBody>\n        </Table>\n      </div>\n  );\n}\n\ninterface TableReportRowProps {\n  workLog: ReportingWorkLog;\n  username: string;\n  onEdit: VoidFunction;\n  onRemove: VoidFunction;\n  employee?: { text: string, rowSpan: number };\n  day?: { text: string, rowSpan: number };\n}\n\nconst TableReportRow = ({day, employee, workLog, username, onEdit, onRemove}: TableReportRowProps) => (\n    <TableRow data-testid='table-report-row'>\n      {day && <TableCell rowSpan={day.rowSpan} data-testid='day-cell'>{day.text}</TableCell>}\n      {employee && <TableCell rowSpan={employee.rowSpan} data-testid='employee-cell'>{employee.text}</TableCell>}\n      <TableCell data-testid='workload-cell'>{formatWorkload(workLog.workload)}</TableCell>\n      <TableCell data-testid='tags-cell'>{workLog.projectNames.join(', ')}</TableCell>\n      <TableCell padding='checkbox'>\n        {username === workLog.employee && <Button onClick={onEdit} data-testid='edit-button'>\n            <EditIcon/>\n        </Button>}\n      </TableCell>\n      <TableCell padding='checkbox'>\n        {username === workLog.employee && <Button onClick={onRemove} data-testid='remove-button'>\n            <DeleteIcon/>\n        </Button>}\n      </TableCell>\n    </TableRow>\n);\n","import { Month } from '../../../utils/Month';\n\nexport class BulkEditQuery {\n  constructor(readonly query: string = '', readonly expression: string = '') {}\n\n  get encodedQuery(): string {\n    return this.query\n        .replace(/#/g, \"!project=\")\n        .replace(/\\*/g, \"!employee=\")\n        .replace(/@/g, \"!date=\")\n        .replace(/\\s/g, \"+\")\n        .replace(/\\//g, \":\");\n  }\n\n  static fromSelection(\n      selectedTags: string[],\n      selectedEmployees: string[],\n      selectedMonth: Month\n  ) {\n    const query = [\n      `@${selectedMonth.toString()}`,\n      selectedTags.map(tag => `#${tag}`).join(' '),\n      selectedEmployees.map(employee => `*${employee}`).join(' ')\n    ].join(' ');\n    return new BulkEditQuery(query);\n  }\n}","import { isNil } from 'lodash';\nimport './BulkEditHint.scss';\n\ninterface BulkEditHintProps {\n  className?: string;\n  entriesAffected?: number;\n}\n\nexport const BulkEditHint = ({entriesAffected, className}: BulkEditHintProps) => {\n  const affectedText = (numberOfEntries: number) => {\n    if (numberOfEntries === 0) {\n      return (\n          <div>Hint: <span className='number-of-entries'>No </span>worklog entries will be affected by this operation.</div>\n      );\n    } else if (numberOfEntries === 1) {\n      return (\n          <div>Hint: <span className='number-of-entries'>1 </span>worklog entry will be affected by this operation.</div>\n      );\n    }\n    return (\n        <div>Hint: <span className='number-of-entries'>{numberOfEntries} </span>worklog entries will be affected by this operation.</div>\n    )\n  };\n\n  return (\n      <div className={className ? ` ${className} bulk-edit-hint` : 'bulk-edit-hint'} data-hint-text>\n        {\n          isNil(entriesAffected) ? 'Query is being validated...' : affectedText(entriesAffected)\n        }\n      </div>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\nimport { Month } from '../../../utils/Month';\nimport { BulkEditQuery } from './BulkEditQuery';\nimport { OpenTrappRestAPI } from '../../../api/OpenTrappAPI';\nimport './BulkEditDialog.scss';\nimport { BulkEditHint } from './BulkEditHint';\nimport { BulkEditDTO } from '../../../api/dtos';\n\ninterface BulkEditDialogProps {\n  username: string;\n  selection: {tags: string[], employees: string[], month: {year: number, month: number}};\n  userTags: string[];\n  onEdit: (editDTO: BulkEditDTO) => void;\n}\n\nexport const BulkEditDialog = ({username, selection, userTags, onEdit}: BulkEditDialogProps) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [query, setQuery] = useState(new BulkEditQuery());\n  const [affectedEntries, setAffectedEntries] = useState(undefined as number);\n\n  const initialQuery = BulkEditQuery.fromSelection(\n      selection.tags ? selection.tags : userTags,\n      selection.employees ? selection.employees : [username],\n      new Month(selection.month.year, selection.month.month)\n  );\n\n  const validateQuery = (query: BulkEditQuery) => {\n    OpenTrappRestAPI.validateBulkEditQuery(query.encodedQuery)\n        .then(affectedEntries => setAffectedEntries(affectedEntries.entriesAffected));\n  }\n\n  const handleExpressionChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(new BulkEditQuery(query.query, event.target.value));\n  };\n\n  const handleOpenDialog = () => {\n    setQuery(initialQuery);\n    setDialogOpen(true);\n    validateQuery(initialQuery);\n  };\n\n  const handleCloseDialog = () => setDialogOpen(false);\n\n  const handleUpdate = () => {\n    onEdit({query: query.query, expression: query.expression});\n    handleCloseDialog();\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newQuery = new BulkEditQuery(event.target.value, query.expression);\n    setAffectedEntries(undefined);\n    setQuery(newQuery);\n    validateQuery(newQuery);\n  };\n\n  return (\n      <div>\n        <Button onClick={handleOpenDialog}>\n          <EditIcon/>\n          Bulk edit\n        </Button>\n        <Dialog open={dialogOpen} onClose={handleCloseDialog} className='bulk-edit' classes={{paper: 'max-width: 40em'}}>\n          <DialogTitle>Bulk edit</DialogTitle>\n          <DialogContent className='bulk-edit__content content'>\n            <TextField className='text-field'\n                       label='Query'\n                       value={query.query}\n                       onChange={handleQueryChange}\n                       data-testid='bulk-edit-query'/>\n            <TextField className='text-field'\n                       label='Expression'\n                       placeholder='-#vacation to remove and +#sick to add tag'\n                       value={query.expression}\n                       onChange={handleExpressionChange}\n                       data-testid='bulk-edit-expression'/>\n          </DialogContent>\n          <BulkEditHint entriesAffected={affectedEntries} className='content__hint'/>\n          <DialogActions>\n            <Button onClick={handleCloseDialog}>Cancel</Button>\n            <Button color='primary' onClick={handleUpdate}>Update</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  );\n}\n","import { ReportingWorkLog } from '../reporting.model';\nimport { Table } from '@material-ui/core';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { chain, sum } from 'lodash';\nimport './ProjectsReport.scss';\nimport { formatWorkload } from '../../../utils/workloadUtils';\n\ninterface ProjectsReportProps {\n  workLogs: ReportingWorkLog[];\n}\n\nexport const ProjectsReport = ({workLogs = []}: ProjectsReportProps) => {\n  const totalWorkload = sum(workLogs.map(w => w.workload));\n  const rowsData = chain(workLogs)\n      .map(w => w.projectNames.map(project => ({project, workload: w.workload})))\n      .flatten()\n      .groupBy(w => w.project)\n      .toPairs()\n      .map(pair => ({project: pair[0], workload: sum(pair[1].map(w => w.workload))}))\n      .map(p => ({project: p.project, workload: p.workload, share: p.workload / totalWorkload}))\n      .sortBy(p => p.project)\n      .value();\n\n  return (\n      <div className='projects-report' data-testid='projects-report'>\n        <Table className='projects-report__table table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Project</TableCell>\n              <TableCell>Workload</TableCell>\n              <TableCell>Share</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              rowsData.map((rowData, idx) => (\n                  <TableRow key={idx}>\n                    <TableCell data-testid='project-cell'>{rowData.project}</TableCell>\n                    <TableCell data-testid='workload-cell'>{formatWorkload(rowData.workload)}</TableCell>\n                    <TableCell data-testid='share-cell'>{(rowData.share * 100).toFixed(2)}%</TableCell>\n                  </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </div>\n  );\n}\n","import { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport ArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport ArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport './MonthSelector.scss';\nimport { Month } from '../../../../utils/Month';\nimport Chip from '@material-ui/core/Chip';\n\nconst MonthChip = ({month, isSelected, onClick}: { month: Month, isSelected: boolean, onClick: VoidFunction }) => (\n    <Chip label={month.toString()}\n          color='primary'\n          variant={isSelected ? 'default' : 'outlined'}\n          className='chip'\n          onClick={onClick}\n          data-testid='month-chip'\n          data-chip-selected={isSelected}/>\n);\n\ninterface MonthSelectorProps {\n  selectedMonth: { year: number, month: number };\n  onMonthChange: (year: number, month: number) => void;\n}\n\nexport const MonthSelector = ({selectedMonth, onMonthChange}: MonthSelectorProps) => {\n  const [shift, setShift] = useState(0);\n  const months = Month.current.range(3, 1)\n      .map(m => shift > 0 ? m.plus(shift) : m.minus(-shift));\n\n  return (\n      <div className='month-selector' data-testid='months-selector'>\n        <div className='month-selector__header'>Month</div>\n        <div className='month-selector__months'>\n          <Button onClick={() => setShift(shift - 1)} data-testid='prev-months-button'>\n            <ArrowUpIcon/>\n          </Button>\n          {\n            months.map((month: Month, idx: number) =>\n                <MonthChip key={idx}\n                           month={month}\n                           isSelected={new Month(selectedMonth.year, selectedMonth.month).toString() === month.toString()}\n                           onClick={() => onMonthChange(month.year, month.month)}/>\n            )\n          }\n          <Button onClick={() => setShift(shift + 1)} data-testid='next-months-button'>\n            <ArrowDownIcon/>\n          </Button>\n        </div>\n      </div>\n  );\n}\n","import { Chip } from '@material-ui/core';\nimport { formatWorkload } from '../../../../utils/workloadUtils';\n\ninterface ChipLabelProps {\n  label: string;\n  workload: number;\n}\n\nconst ChipLabel = ({label, workload}: ChipLabelProps) => (\n    <div className='chip-content'>\n      <div className='chip-content__label' data-testid='selector-chip-label'>{label}</div>\n      {workload > 0 && <div className='chip-content__workload'>{formatWorkload(workload)}</div>}\n    </div>\n);\n\ninterface SelectorChipProps {\n  label: string;\n  selected: boolean;\n  workload: number;\n  onClick: VoidFunction;\n}\n\nexport const SelectorChip = ({label, workload, selected, onClick}: SelectorChipProps) => (\n    <Chip label={<ChipLabel label={label} workload={workload}/>}\n          color='primary'\n          className='chip'\n          variant={selected ? 'default' : 'outlined'}\n          onClick={onClick}\n          data-testid='selector-chip'\n          data-chip-selected={selected}/>\n);\n","import { useState } from 'react';\nimport { uniq, xor } from 'lodash';\nimport { ReportingWorkLog } from '../../reporting.model';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { SelectorChip } from './SelectorChip';\nimport './WorkLogSelector.scss';\n\ninterface WorkLogSelectorProps {\n  title: string;\n  workLogs: ReportingWorkLog[];\n  chipLabel: (workLog: ReportingWorkLog) => string | string[];\n  selected?: string[];\n  onSelectionChange: (values: string[]) => void;\n  workLogFilter?: (workLog: ReportingWorkLog) => boolean;\n  hideIneligible?: boolean;\n}\n\nexport const WorkLogSelector = ({hideIneligible, selected = [], workLogs, chipLabel, workLogFilter = () => true, onSelectionChange, title}: WorkLogSelectorProps) => {\n  const [ineligibleHidden, setIneligibleHidden] = useState(hideIneligible);\n\n  const renderChip = (label: string, idx: number) => {\n    const workload = workLogs\n        .filter(w => chipLabel(w) === label || chipLabel(w).includes(label))\n        .filter(workLogFilter)\n        .map(w => w.workload)\n        .reduce((prev, curr) => prev + curr, 0);\n    return (\n        <SelectorChip key={idx}\n                      label={label}\n                      workload={workload}\n                      selected={selected.includes(label)}\n                      onClick={() => onSelectionChange(xor(selected, [label]))}/>\n    );\n  };\n\n  const labels = uniq(\n      workLogs\n          .filter(w => !ineligibleHidden || workLogFilter(w))\n          .map(chipLabel)\n          .map(v => Array.isArray(v) ? v : [v])\n          .reduce(((prev, curr) => [...prev, ...curr]), [])\n  ).sort();\n\n  const onIneligibleButtonClick = () => setIneligibleHidden(!ineligibleHidden);\n  return (\n      <div className='work-log-selector'>\n        <div className='work-log-selector__header'>{title}</div>\n        <div className='work-log-selector__chips'>\n          {\n            labels.map(renderChip)\n          }\n        </div>\n        <div className='work-log-selector__footer'>\n          <Button size='small' onClick={onIneligibleButtonClick}>\n            {hideIneligible ? <VisibilityIcon/> : <VisibilityOffIcon/>}\n            {hideIneligible ? 'Show ineligible' : 'Hide ineligible'}\n          </Button>\n          <Button size='small' onClick={() => onSelectionChange([])}>\n            <ClearIcon/>\n            None\n          </Button>\n          <Button size='small' onClick={() => onSelectionChange(labels)}>\n            <AddIcon/>\n            All\n          </Button>\n        </div>\n      </div>\n  );\n}\n","import { MonthSelector } from './monthSelector/MonthSelector';\nimport { WorkLogSelector } from './workLogSelector/WorkLogSelector';\nimport { ReportingWorkLog } from '../reporting.model';\nimport './ReportingFilters.scss';\n\ninterface Selection {\n  month: { year: number, month: number };\n  tags: string[];\n  employees: string[];\n}\n\ninterface ReportingFiltersProps {\n  workLogs: ReportingWorkLog[];\n  onTagsChange: (values: string[]) => void;\n  onEmployeesChange: (values: string[]) => void;\n  onMonthChange: (year: number, month: number) => void;\n  selection: Selection;\n  employeesFilter: (workLog: ReportingWorkLog) => boolean;\n  tagsFilter: (workLog: ReportingWorkLog) => boolean;\n}\n\nexport const ReportingFilters = ({workLogs, selection, onTagsChange, onEmployeesChange, onMonthChange, employeesFilter, tagsFilter}: ReportingFiltersProps) => (\n    <div className='reporting-filters'>\n      <div>\n        <MonthSelector selectedMonth={selection.month} onMonthChange={onMonthChange}/>\n      </div>\n      <div data-testid='projects-selector'>\n        <WorkLogSelector title='Projects'\n                         chipLabel={workLog => workLog.projectNames}\n                         workLogs={workLogs}\n                         selected={selection.tags}\n                         workLogFilter={employeesFilter}\n                         onSelectionChange={onTagsChange}/>\n      </div>\n      <div data-testid='employees-selector'>\n        <WorkLogSelector title='Employees'\n                         chipLabel={workLog => workLog.employee}\n                         workLogs={workLogs}\n                         selected={selection.employees}\n                         hideIneligible={true}\n                         workLogFilter={tagsFilter}\n                         onSelectionChange={onEmployeesChange}/>\n      </div>\n    </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport Divider from '@material-ui/core/Divider';\nimport { loadMonthAction, monthChangedAction } from '../../actions/calendar.actions';\nimport { bulkEditAction, loadTagsAction, removeWorkLogAction, updateWorkLogAction } from '../../actions/workLog.actions';\nimport './ReportingPage.desktop.scss';\nimport { EditedWorkLog, ReportingWorkLog } from './reporting.model';\nimport { chain, includes, intersection, isEmpty } from 'lodash';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CalendarIcon from '@material-ui/icons/CalendarToday';\nimport ListIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/BarChart';\nimport { MonthlyReport } from '../monthlyReport/MonthlyReport';\nimport { MonthlyReportDay, WorkLog } from '../monthlyReport/MonthlyReport.model';\nimport { TableReport } from './tableReport/TableReport';\nimport { BulkEditDialog } from './bulkEditDialog/BulkEditDialog';\nimport { ProjectsReport } from './projectsReport/ProjectsReport';\nimport { ReportingFilters } from './reportingFilters/ReportingFilters';\nimport { selectedMonthSelector, usernameSelector, userTagsSelector } from '../../selectors/selectors';\n\nconst employeesFilter = (selectedEmployees: string[]) => (w: ReportingWorkLog) => includes(selectedEmployees, w.employee);\nconst tagsFilter = (selectedTags: string[]) => (w: ReportingWorkLog) => !isEmpty(intersection(selectedTags, w.projectNames));\n\ninterface ReportProps {\n  days: MonthlyReportDay[];\n  tags: string[];\n  username: string;\n  workLogs: ReportingWorkLog[];\n  selection: { employees: string[], tags: string[] },\n  onRemoveWorkLog: (id: string) => void;\n  onEditWorkLog: (w: EditedWorkLog) => void;\n}\n\nconst Report = ({days, tags, username, onRemoveWorkLog, onEditWorkLog, workLogs, selection}: ReportProps) => {\n  enum ReportType {\n    CALENDAR,\n    TABLE,\n    PROJECTS\n  }\n\n  const [reportType, setReportType] = useState(ReportType.CALENDAR);\n\n  const workLogsForSelectedUsersAndTags: { [username: string]: WorkLog[]; } = chain(workLogs)\n      .filter(employeesFilter(selection.employees))\n      .groupBy(w => w.employee)\n      .mapValues(values => values\n          .filter(tagsFilter(selection.tags))\n          .map(v => ({day: v.day, workload: v.workload}))\n      )\n      .value();\n  const filteredWorkLogs = workLogs\n      .filter(employeesFilter(selection.employees))\n      .filter(tagsFilter(selection.tags));\n\n  return (\n      <Paper className='reporting-page__report report'>\n        <Tabs value={reportType}\n              onChange={() => {\n              }}\n              variant='fullWidth'\n              indicatorColor='primary'\n              textColor='primary'\n              className='report__tabs'>\n          <Tab icon={<CalendarIcon/>} onClick={() => setReportType(ReportType.CALENDAR)} data-testid='calendar-tab'/>\n          <Tab icon={<ListIcon/>} onClick={() => setReportType(ReportType.TABLE)} data-testid='table-tab'/>\n          <Tab icon={<ChartIcon/>} onClick={() => setReportType(ReportType.PROJECTS)} data-testid='projects-tab'/>\n        </Tabs>\n        {reportType === ReportType.CALENDAR && <MonthlyReport days={days} workLogs={workLogsForSelectedUsersAndTags}/>}\n        {reportType === ReportType.TABLE && <TableReport workLogs={filteredWorkLogs}\n                                                         tags={tags}\n                                                         onRemoveWorkLog={onRemoveWorkLog}\n                                                         onEditWorkLog={onEditWorkLog}\n                                                         username={username}/>\n        }\n        {reportType === ReportType.PROJECTS && <ProjectsReport workLogs={filteredWorkLogs}/>}\n      </Paper>\n  );\n}\n\nexport const ReportingPageDesktop = () => {\n  const [selectedEmployees, setSelectedEmployees] = useState(undefined as string[]);\n  const [selectedTags, setSelectedTags] = useState(undefined as string[]);\n  const days = useSelector((state: OpenTrappState) => state.calendar.days || []);\n  const tags = useSelector((state: OpenTrappState) => state.workLog.tags || []);\n  const userTags = useSelector(userTagsSelector);\n  const username = useSelector(usernameSelector);\n  const workLogs = useSelector((state: OpenTrappState) => state.workLog.workLogs || []);\n  const selectedMonth = useSelector(selectedMonthSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMonthAction());\n    dispatch(loadTagsAction());\n  }, [dispatch]);\n\n  const selection = {\n    tags: selectedTags ? selectedTags : userTags,\n    employees: selectedEmployees ? selectedEmployees : [username],\n    month: selectedMonth\n  }\n\n  return (\n      <div className='reporting-page'>\n        <div className='reporting-page__header header'>\n          <div className='header__text'><span>Review reports</span> by month, project and employee</div>\n          <BulkEditDialog username={username} selection={selection} userTags={userTags} onEdit={dto => dispatch(bulkEditAction(dto))}/>\n        </div>\n        <Divider variant='fullWidth'/>\n        <div className='reporting-page__filters'>\n          <ReportingFilters workLogs={workLogs.map(w => new ReportingWorkLog(w))}\n                            onTagsChange={v => setSelectedTags(v)}\n                            onEmployeesChange={v => setSelectedEmployees(v)}\n                            onMonthChange={(year, month) => dispatch(monthChangedAction(year, month))}\n                            selection={selection}\n                            employeesFilter={employeesFilter(selection.employees)}\n                            tagsFilter={tagsFilter(selection.tags)}/>\n        </div>\n        <Report days={days}\n                tags={tags}\n                username={username}\n                selection={selection}\n                workLogs={workLogs}\n                onRemoveWorkLog={id => dispatch(removeWorkLogAction(id))}\n                onEditWorkLog={w => dispatch(updateWorkLogAction(w.id, w.projectNames, w.workload))}/>\n      </div>\n  );\n}\n","import { NOTIFICATIONS_CONSTANTS } from './constants';\nimport { Notification } from '../redux/notifications.reducer';\n\nexport const infoNotificationAction = (message: string) => ({\n  type: NOTIFICATIONS_CONSTANTS.NOTIFICATION_CREATED,\n  payload: Notification.info(message)\n});\n\nexport const errorNotificationAction = (message: string) => ({\n  type: NOTIFICATIONS_CONSTANTS.NOTIFICATION_CREATED,\n  payload: Notification.error(message)\n});\n\nexport const dismissNotificationAction = (id: string) => ({\n  type: NOTIFICATIONS_CONSTANTS.NOTIFICATION_DISMISSED,\n  payload: id\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport { Snackbar } from '@material-ui/core';\nimport { dismissNotificationAction } from \"../../actions/notifications.actions\";\n\nexport const Notifications = () => {\n  const notifications = useSelector((state: OpenTrappState) => state.notifications.notifications);\n  const dispatch = useDispatch();\n  const dissmiss = (id: string) => dispatch(dismissNotificationAction(id));\n\n  return (\n      <div>\n        {notifications.map((notification, idx) =>\n            <Snackbar key={idx}\n                      open={true}\n                      onClose={() => dissmiss(notification.id)}\n                      message={notification.message}\n                      anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n                      data-testid='snackbar' />\n        )}\n      </div>\n  );\n};\n","import { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport moment from 'moment';\nimport { isEmpty } from 'lodash';\nimport './DayCard.scss'\nimport { WorkLogChip } from '../../workLogChip/WorkLogChip';\n\ninterface WorkLogDTO {\n  workload: number;\n  projectNames: string[];\n}\n\ninterface DayCardProps {\n  day: string;\n  weekend: boolean;\n  workLogs: WorkLogDTO[];\n  onEditClick: VoidFunction;\n}\n\nconst Reminder = () => (\n    <div className='card-content__reminder'>You should report work time for this day!</div>\n);\n\nconst WorkLogs = ({workLogs}) => (\n    <List data-testid='day-card-list'>\n      {workLogs.map((w, idx) => (\n          <ListItem key={idx}>\n            <WorkLogChip workLog={w}/>\n          </ListItem>\n      ))}\n    </List>\n)\n\nconst DayCardContent = ({weekend, workLogs, pastDate}: { weekend: boolean, workLogs: WorkLogDTO[], pastDate: boolean }) => (\n    <CardContent className='day-card__card-content card-content'>\n      {\n        pastDate && isEmpty(workLogs) && !weekend ? <Reminder/> : <WorkLogs workLogs={workLogs}/>\n      }\n    </CardContent>\n);\n\nexport const DayCard = ({day, onEditClick, weekend, workLogs}: DayCardProps) => {\n  const pastDate = moment(day, 'YYYY/MM/DD').isBefore(moment(), 'day');\n  const showContent = (pastDate && !weekend) || !isEmpty(workLogs);\n  return (\n      <Card className='day-card' data-testid='day-card'>\n        <CardHeader title={day} subheader={moment(day, 'YYYY/MM/DD').format('dddd')} data-testid='day-card-day'/>\n        {\n          showContent && <DayCardContent weekend={weekend} workLogs={workLogs} pastDate={pastDate}/>\n        }\n        <CardActions className='day-card__actions'>\n          <Button size='small' onClick={onEditClick}>Edit</Button>\n        </CardActions>\n      </Card>\n  );\n}\n","import { Fab } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBackIos';\nimport ArrowForward from '@material-ui/icons/ArrowForwardIos';\nimport { Month } from '../../../utils/Month';\nimport './MonthSelector.scss';\n\ninterface Props {\n  selectedMonth: Month;\n  onChange: (month: Month) => void;\n}\n\nexport const MonthSelector = ({selectedMonth, onChange}: Props) => (\n    <div className='reporting-month-selector' data-testid='month-selector'>\n      <Fab aria-label='Previous'\n           data-testid='month-selector-previous'\n           onClick={() => onChange(selectedMonth.minus(1))}>\n        <ArrowBack/>\n      </Fab>\n      <div className='reporting-month-selector__date'>\n        {selectedMonth.toString()}\n      </div>\n      <Fab aria-label='Next'\n           data-testid='month-selector-next'\n           onClick={() => onChange(selectedMonth.plus(1))}>\n        <ArrowForward/>\n      </Fab>\n    </div>\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { groupBy } from 'lodash';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport { DayCard } from './dayCard/DayCard';\nimport { loadMonthAction, monthChangedAction } from '../../actions/calendar.actions';\nimport { MonthSelector } from './monthSelector/MonthSelector';\nimport { Month } from '../../utils/Month';\nimport { History, Location } from 'history';\nimport { ParsedWorkLog } from '../../workLogExpressionParser/ParsedWorkLog';\nimport { match, withRouter } from 'react-router';\nimport { workLogChangedAction } from '../../actions/workLog.actions';\nimport './ReportingPage.mobile.scss';\n\ninterface Props {\n  history: History<any>;\n  location: Location<any>;\n  match: match<any>;\n}\n\nconst ReportingPageMobileComponent = ({history}: Props) => {\n  const {selectedMonth, days = []} = useSelector((state: OpenTrappState) => state.calendar);\n  const workLogs = useSelector((state: OpenTrappState) =>\n      state.workLog.workLogs.filter(workLog => workLog.employee === state.authentication.user.name)\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMonthAction());\n  }, [dispatch]);\n\n  const groupedWorkLogs = groupBy(workLogs, w => w.day);\n  const workLogsByDay = days\n      .sort((d1, d2) => d2.id.localeCompare(d1.id))\n      .map(d => ({day: d.id, weekend: d.weekend, workLogs: groupedWorkLogs[d.id] || []}))\n      .filter(d => d.workLogs.length > 0);\n\n  const onEditDayClick = (day: string) => {\n    dispatch(workLogChangedAction(ParsedWorkLog.empty().withDays([day])));\n    history.push('/registration');\n  }\n\n  const onMonthChange = (month: Month) => dispatch(monthChangedAction(month.year, month.month));\n\n  return (\n      <div className='reporting-page-mobile'>\n        <MonthSelector selectedMonth={new Month(selectedMonth.year, selectedMonth.month)} onChange={onMonthChange}/>\n        <div className='reporting-page-mobile__days-list days-list'>\n          {workLogsByDay.map(day =>\n              <DayCard day={day.day}\n                       key={day.day}\n                       weekend={day.weekend}\n                       workLogs={day.workLogs}\n                       onEditClick={() => onEditDayClick(day.day)}/>\n          )}\n        </div>\n      </div>\n  );\n}\n\nexport const ReportingPageMobile = withRouter(ReportingPageMobileComponent);\n","import TableHead from '@material-ui/core/TableHead';\nimport Table from '@material-ui/core/Table';\nimport { TableRow } from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport { ServiceAccountDTO } from '../../api/dtos';\nimport TableBody from '@material-ui/core/TableBody';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\ninterface ServiceAccountsListProps {\n  accounts: ServiceAccountDTO[];\n  username: string;\n  onDelete: (id: string) => void;\n}\n\nexport const ServiceAccountsList = ({accounts, username, onDelete}: ServiceAccountsListProps) => (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Account Name</TableCell>\n          <TableCell>Client ID</TableCell>\n          <TableCell>Owner</TableCell>\n          <TableCell/>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {accounts.map(account => (\n            <ServiceAccountRow key={account.clientID}\n                               account={account}\n                               username={username}\n                               onDelete={onDelete}/>\n        ))}\n      </TableBody>\n    </Table>\n);\n\ninterface ServiceAccountsRowProps {\n  account: ServiceAccountDTO;\n  username: string;\n  onDelete: (id: string) => void;\n}\n\nconst ServiceAccountRow = ({account, username, onDelete}: ServiceAccountsRowProps) => (\n    <TableRow data-testid='service-account-row'>\n      <TableCell>{account.name}</TableCell>\n      <TableCell>{account.clientID}</TableCell>\n      <TableCell>{account.owner}</TableCell>\n      <TableCell>\n        {\n          username === account.owner && <Button onClick={() => onDelete(account.clientID)} data-testid='delete-account-button'>\n            <DeleteIcon/>\n          </Button>\n        }\n      </TableCell>\n    </TableRow>\n);\n","import { ADMIN_CONSTANTS } from './constants';\nimport { AuthorizedUserDTO, ServiceAccountDTO } from '../api/dtos';\n\nexport const loadServiceAccountsAction = () => ({\n  type: ADMIN_CONSTANTS.LOAD_SERVICE_ACCOUNTS\n});\n\nexport const serviceAccountsLoadedAction = (serviceAccounts: ServiceAccountDTO[]) => ({\n  type: ADMIN_CONSTANTS.SERVICE_ACCOUNTS_LOADED,\n  payload: serviceAccounts\n});\n\nexport const deleteServiceAccountAction = (id: string) => ({\n  type: ADMIN_CONSTANTS.DELETE_SERVICE_ACCOUNT,\n  payload: id\n});\n\nexport type DeleteServiceAccountAction = ReturnType<typeof deleteServiceAccountAction>;\n\nexport const serviceAccountDeletedAction = (id: string) => ({\n  type: ADMIN_CONSTANTS.SERVICE_ACCOUNT_DELETED,\n  payload: id\n});\n\nexport const loadAuthorizedUsersAction = () => ({\n  type: ADMIN_CONSTANTS.LOAD_AUTHORIZED_USERS\n});\n\nexport const authorizedUsersLoadedAction = (authorizedUsers: AuthorizedUserDTO[]) => ({\n  type: ADMIN_CONSTANTS.AUTHORIZED_USERS_LOADED,\n  payload: authorizedUsers\n});\n","import { AuthorizedUserDTO } from '../../api/dtos';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport { TableRow } from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\n\ninterface UsersListProps {\n  users: AuthorizedUserDTO[];\n}\n\nexport const UsersList = ({users}: UsersListProps) => (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Email</TableCell>\n          <TableCell>Roles</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {users.map(user => (\n            <AuthorizedUserRow key={user.name} user={user}/>\n        ))}\n      </TableBody>\n    </Table>\n);\n\nconst AuthorizedUserRow = ({user}: { user: AuthorizedUserDTO }) => (\n    <TableRow data-testid='authorized-user-row'>\n      <TableCell>{user.name}</TableCell>\n      <TableCell>{user.email}</TableCell>\n      <TableCell>{user.roles.join(', ')}</TableCell>\n    </TableRow>\n);\n","import { useState } from 'react';\nimport { Dialog } from '@material-ui/core';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { isEmpty } from 'lodash';\nimport TextField from '@material-ui/core/TextField';\nimport { OpenTrappRestAPI } from '../../api/OpenTrappAPI';\n\ninterface ServiceAccountDialogProps {\n  open: boolean;\n  onClose: (name?: string) => void;\n}\n\ninterface CreatedAccount {\n  clientID: string;\n  secret: string;\n}\n\nconst AccountDetails = ({name, clientID, secret}: { name: string, clientID: string, secret: string }) => (\n    <DialogContent className='service-account-dialog__content content'>\n      <div>Your account <b>{name}</b> has been created.</div>\n      <div>Copy credentials from fields below.</div>\n      <TextField label='Client ID'\n                 className='content__text-field'\n                 value={clientID}\n                 margin='normal'\n                 InputProps={{readOnly: true}}\n                 type='text'\n                 fullWidth/>\n      <TextField label='Secret'\n                 className='content__text-field'\n                 value={secret}\n                 margin='normal'\n                 InputProps={{readOnly: true}}\n                 type='text'\n                 fullWidth/>\n    </DialogContent>\n);\n\nconst DetailsActions = ({onClose}: { onClose: VoidFunction }) => (\n    <DialogActions>\n      <Button onClick={onClose}>Close</Button>\n    </DialogActions>\n);\n\nconst NameInput = ({name, onChange}: { name: string, onChange: (string) => void }) => (\n    <DialogContent className='service-account-dialog__content content'>\n      <TextField autoFocus\n                 className='content__text-field'\n                 value={name}\n                 onChange={e => onChange(e.target.value)}\n                 margin='normal'\n                 label='Account name'\n                 type='text'\n                 fullWidth/>\n    </DialogContent>\n);\n\nconst NameActions = ({onClose, onCreate, disabled}: { onClose: VoidFunction, onCreate: VoidFunction, disabled: boolean }) => (\n    <DialogActions>\n      <Button onClick={onClose} data-testid='cancel-button'>Cancel</Button>\n      <Button onClick={onCreate} color='primary' data-testid='create-button' disabled={disabled}>Create</Button>\n    </DialogActions>\n);\n\nexport const ServiceAccountDialog = ({open, onClose}: ServiceAccountDialogProps) => {\n  const [createdAccount, setCreatedAccount] = useState(undefined as CreatedAccount);\n  const [name, setName] = useState('');\n\n  const onCreateClick = () => {\n    OpenTrappRestAPI.creteServiceAccount(name)\n        .then(a => setCreatedAccount(a));\n  };\n\n  const onCloseDialog = () => {\n    setName('');\n    setCreatedAccount(undefined);\n    onClose(isEmpty(name) || !createdAccount ? undefined : name);\n  }\n\n  return (\n      <Dialog open={open} onClose={onCloseDialog} className='service-account-dialog'>\n        <DialogTitle>Create service account</DialogTitle>\n        {\n          createdAccount\n              ? <AccountDetails name={name} clientID={createdAccount.clientID} secret={createdAccount.secret}/>\n              : <NameInput name={name} onChange={n => setName(n)}/>}\n        {\n          createdAccount\n              ? <DetailsActions onClose={onCloseDialog}/>\n              : <NameActions onClose={onCloseDialog} onCreate={onCreateClick} disabled={isEmpty(name)}/>\n        }\n      </Dialog>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OpenTrappState } from '../../redux/root.reducer';\nimport './AdminPage.scss';\nimport Paper from '@material-ui/core/Paper';\nimport { ServiceAccountsList } from './ServiceAccountsList';\nimport {\n  deleteServiceAccountAction,\n  loadAuthorizedUsersAction,\n  loadServiceAccountsAction\n} from '../../actions/admin.actions';\nimport { UsersList } from './UsersList';\nimport Button from '@material-ui/core/Button';\nimport { ServiceAccountDialog } from './ServiceAccountDialog';\n\nexport const AdminPage = () => {\n  const [serviceAccountDialogOpen, setServiceAccountDialogOpen] = useState(false);\n  const serviceAccounts = useSelector((state: OpenTrappState) => state.admin?.serviceAccounts);\n  const users = useSelector((state: OpenTrappState) => state.admin?.authorizedUsers);\n  const username = useSelector((state: OpenTrappState) => state.authentication?.user?.name);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadServiceAccountsAction());\n    dispatch(loadAuthorizedUsersAction());\n  }, [dispatch]);\n  const onOpenServiceAccountDialog = () => setServiceAccountDialogOpen(true);\n\n  const onCloseServiceAccountDialog = (name?: string) => {\n    setServiceAccountDialogOpen(false);\n    if (name) {\n      dispatch(loadServiceAccountsAction());\n    }\n  };\n\n  return (\n      <div className='admin-page'>\n        <ServiceAccountDialog open={serviceAccountDialogOpen} onClose={onCloseServiceAccountDialog}/>\n        <div>\n          <div className='admin-page__header'>\n            <div>Service accounts</div>\n            <Button variant='contained' color='primary' size='small' onClick={onOpenServiceAccountDialog}>Create</Button>\n          </div>\n          <Paper className='admin-page__content'>\n            {\n              serviceAccounts ?\n                  <ServiceAccountsList accounts={serviceAccounts} username={username}\n                                       onDelete={id => dispatch(deleteServiceAccountAction(id))}/> :\n                  <LoadingPlaceholder>Loading accounts...</LoadingPlaceholder>\n            }\n          </Paper>\n        </div>\n        <div>\n          <div className='admin-page__header'>Users</div>\n          <Paper className='admin-page__content'>\n            {\n              users ? <UsersList users={users}/> : <LoadingPlaceholder>Loading users...</LoadingPlaceholder>\n            }\n          </Paper>\n        </div>\n      </div>\n  );\n}\n\nconst LoadingPlaceholder = ({children}) => (\n    <div className='admin-page__placeholder'>{children}</div>\n);\n","import { useLocation, useHistory } from 'react-router-dom';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport CreateIcon from '@material-ui/icons/Create';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n});\n\nexport const BottomNavigationBar = () => {\n  const {pathname} = useLocation();\n  const history = useHistory();\n  const {root} = useStyles();\n  return (\n    <BottomNavigation value={pathname}\n                      onChange={(e, v) => history.push(v)}\n                      className={root}\n                      showLabels data-testid='bottom-navigation-bar'>\n      <BottomNavigationAction label='Registration' value='/registration' icon={<CreateIcon/>} />\n      <BottomNavigationAction label='Reporting' value='/reporting' icon={<BarChartIcon/>}/>\n    </BottomNavigation>\n  );\n}\n","import { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport { withWidth } from '@material-ui/core';\nimport { HeaderDesktop } from './components/header/Header.desktop';\nimport { HeaderMobile } from './components/header/Header.mobile';\nimport { Route, Switch } from 'react-router';\nimport { LandingPage } from './components/landingPage/LandingPage';\nimport { PrivateRoute } from './components/PrivateRoute';\nimport { NotFoundPage } from './components/notFound/NotFoundPage';\nimport { isWidthUp } from '@material-ui/core/withWidth';\nimport { RegistrationPageDesktop } from './components/registrationPage/RegistrationPage.desktop';\nimport { SettingsPageDesktop } from './components/settingsPage/SettingsPage.desktop';\nimport { RegistrationPageMobile } from './components/registrationPage/RegistrationPage.mobile';\nimport { SettingsPageMobile } from './components/settingsPage/SettingsPage.mobile';\nimport { ReportingPageDesktop } from './components/reportingPage/ReportingPage.desktop';\nimport { Notifications } from './components/notifications/Notifications';\nimport { ReportingPageMobile } from './components/reportingPage/ReportingPage.mobile';\nimport { AdminPage } from './components/adminPage/AdminPage';\nimport { BottomNavigationBar } from './components/bottomNavigation/BottomNavigation';\nimport { useSelector } from 'react-redux';\nimport { userLoggedInSelector } from './selectors/selectors';\n\ninterface AppRoutingProps {\n  width: Breakpoint;\n}\n\nconst DesktopRouting = () => (\n    <div>\n      <HeaderDesktop/>\n      <Switch>\n        <Route path='/' exact component={LandingPage}/>\n        <PrivateRoute path='/registration' component={RegistrationPageDesktop}/>\n        <PrivateRoute path='/reporting' component={ReportingPageDesktop}/>\n        <PrivateRoute path='/settings' component={SettingsPageDesktop}/>\n        <PrivateRoute path='/admin' component={AdminPage}/>\n        <Route component={NotFoundPage}/>\n      </Switch>\n      <Notifications/>\n    </div>\n);\n\nexport const MobileRouting = () => {\n  const isLoggedIn = useSelector(userLoggedInSelector);\n  return (\n      <div>\n        <HeaderMobile/>\n        <Switch>\n          <Route path='/' exact component={LandingPage}/>\n          <PrivateRoute path='/registration' component={RegistrationPageMobile}/>\n          <PrivateRoute path='/reporting' component={ReportingPageMobile}/>\n          <PrivateRoute path='/settings' component={SettingsPageMobile}/>\n          <Route component={NotFoundPage}/>\n        </Switch>\n        {isLoggedIn && <BottomNavigationBar />}\n      </div>\n  );\n}\n\nconst AppRoutingComponent = ({width}: AppRoutingProps) => isWidthUp('md', width) ? <DesktopRouting /> : <MobileRouting />;\n\nexport const AppRouting = withWidth()(AppRoutingComponent);\n","import { Fragment } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./theme\";\nimport { AppRouting } from './AppRouting';\n\nexport const App = () => (\n    <Fragment>\n      <CssBaseline/>\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename='/open-trapp-ui'>\n          <AppRouting/>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Fragment>\n);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AuthorizedUser } from '../api/dtos';\nimport { AUTHENTICATION_CONSTANTS } from '../actions/constants';\nimport { LocalStorage } from '../utils/LocalStorage';\n\nexport interface AuthenticationState {\n  loggedIn: boolean;\n  user?: AuthorizedUser;\n}\n\nconst user: AuthorizedUser = LocalStorage.authorizedUser;\n\nconst initialState = user ? {loggedIn: true, user} : {loggedIn: false};\n\nexport function authentication(state: AuthenticationState = initialState, action: any): AuthenticationState {\n  switch (action.type) {\n    case AUTHENTICATION_CONSTANTS.LOGIN_SUCCESS:\n      return {loggedIn: true, user: action.payload};\n    case AUTHENTICATION_CONSTANTS.LOGOUT:\n      return {loggedIn: false};\n    default:\n      return state;\n  }\n}\n","import moment from 'moment';\nimport { CALENDAR_CONSTANTS } from '../actions/constants';\nimport { DayDTO } from '../api/dtos';\n\nexport interface CalendarState {\n  selectedMonth: {\n    year: number;\n    month: number;\n  };\n  days?: DayDTO[];\n}\n\nconst initialState: CalendarState = {\n  selectedMonth: {\n    year: moment().year(),\n    month: moment().month() + 1\n  },\n};\n\nexport function calendar(state: CalendarState = initialState, action: any): CalendarState {\n  switch (action.type) {\n    case CALENDAR_CONSTANTS.MONTH_LOADED:\n      return {...state, days: action.payload.days};\n    case CALENDAR_CONSTANTS.MONTH_CHANGED:\n      return {...state, selectedMonth: {year: action.payload.year, month: action.payload.month}, days: undefined};\n    default:\n      return state;\n  }\n}\n","import { ReportingWorkLogDTO } from '../api/dtos';\nimport { WORK_LOG_CONSTANTS } from '../actions/constants';\n\nexport interface WorkLogState {\n  workLogs: ReportingWorkLogDTO[];\n  tags: string[];\n}\n\nconst initialState: WorkLogState = {\n  workLogs: [],\n  tags: []\n};\n\nexport function workLog(state: WorkLogState = initialState, action: any): WorkLogState {\n  switch (action.type) {\n    case WORK_LOG_CONSTANTS.WORK_LOGS_LOADED:\n      return {...state, workLogs: action.payload};\n    case WORK_LOG_CONSTANTS.TAGS_LOADED:\n      return {...state, tags: action.payload};\n    case WORK_LOG_CONSTANTS.WORK_LOG_UPDATED:\n      return {\n        ...state,\n        workLogs: state.workLogs.map(workLog => workLog.id === action.payload.id ? action.payload : workLog)\n      };\n    case WORK_LOG_CONSTANTS.WORK_LOG_REMOVED:\n      return {\n        ...state,\n        workLogs: state.workLogs.filter(workLog => workLog.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import {REGISTRATION_CONSTANTS} from '../actions/constants';\nimport {Preset} from '../components/registrationPage/registration.model';\nimport moment from 'moment';\n\ninterface WorkLogState {\n  expression: string;\n  tags: string[];\n  days: string[];\n  workload: string;\n  valid: boolean;\n}\n\nexport interface RegistrationState {\n  workLog: WorkLogState;\n  presets: Preset[];\n}\n\nexport const initialState: (workLogState?: Partial<WorkLogState>) => RegistrationState = (workLogState) => ({\n  workLog: {\n    expression: '',\n    tags: [],\n    days: [moment().format('YYYY/MM/DD')],\n    workload: '',\n    valid: false,\n    ...workLogState\n  },\n  presets: [],\n});\n\nexport function registration(state: RegistrationState = initialState(), action): RegistrationState {\n  switch (action.type) {\n    case REGISTRATION_CONSTANTS.WORK_LOG_CHANGED:\n      return {...state, workLog: action.payload};\n    case REGISTRATION_CONSTANTS.WORK_LOG_SAVED:\n      return {\n        workLog: initialState({days: state.workLog.days}).workLog,\n        presets: state.presets\n      };\n    case REGISTRATION_CONSTANTS.PRESETS_LOADED:\n      return {...state, presets: action.payload};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { authentication, AuthenticationState } from './authentication.reducer';\nimport { calendar, CalendarState } from './calendar.reducer';\nimport { workLog, WorkLogState } from './workLog.reducer';\nimport { registration, RegistrationState } from './registration.reducer';\nimport { notifications, NotificationsState } from './notifications.reducer';\nimport { admin, AdminState } from './admin.reducer';\n\nexport interface OpenTrappState {\n  authentication: AuthenticationState;\n  calendar: CalendarState;\n  workLog: WorkLogState;\n  registration: RegistrationState;\n  notifications: NotificationsState;\n  admin: AdminState;\n}\n\nexport const rootReducer = combineReducers({\n  authentication,\n  calendar,\n  workLog,\n  registration,\n  notifications,\n  admin\n});\n","import { AuthorizedUserDTO, ServiceAccountDTO } from '../api/dtos';\nimport { ADMIN_CONSTANTS } from '../actions/constants';\n\nexport interface AdminState {\n  serviceAccounts?: ServiceAccountDTO[];\n  authorizedUsers?: AuthorizedUserDTO[];\n}\n\nconst initialState: () => AdminState = () => ({});\n\nexport function admin(state = initialState(), action: any): AdminState {\n  switch (action.type) {\n    case ADMIN_CONSTANTS.SERVICE_ACCOUNTS_LOADED:\n      return {...state, serviceAccounts: action.payload};\n    case ADMIN_CONSTANTS.SERVICE_ACCOUNT_DELETED:\n      return {\n        ...state,\n        serviceAccounts: state.serviceAccounts.filter(a => a.clientID !== action.payload)\n      };\n    case ADMIN_CONSTANTS.AUTHORIZED_USERS_LOADED:\n      return {...state, authorizedUsers: action.payload};\n    default:\n      return state;\n  }\n}\n","export class Preset {\n\n  constructor(readonly tags: string[]) {\n  }\n\n  toString() {\n    return this.tags.map(t => `#${t}`).join(', ');\n  }\n}\n","import { combineEpics } from 'redux-observable';\nimport { loadMonthEpic } from './monthEpic';\nimport {\n  bulkEditWorkLogsEpic,\n  loadTagsEpic,\n  loadWorkLogsEpic,\n  removeWorkLogEpic,\n  saveWorkLogEpic,\n  updateWorkLogEpic\n} from './workLogEpics';\nimport { deleteServiceAccountEpic, loadAuthorizedUsersEpic, loadServiceAccountsEpic } from './adminEpics';\nimport { loadPresetsEpic } from './registrationEpics';\n\nexport default combineEpics(\n    loadMonthEpic,\n    loadWorkLogsEpic,\n    saveWorkLogEpic,\n    removeWorkLogEpic,\n    updateWorkLogEpic,\n    loadServiceAccountsEpic,\n    deleteServiceAccountEpic,\n    loadAuthorizedUsersEpic,\n    loadPresetsEpic,\n    loadTagsEpic,\n    bulkEditWorkLogsEpic\n);\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { CALENDAR_CONSTANTS } from '../actions/constants';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { OpenTrappState } from '../redux/root.reducer';\nimport { monthLoadedAction } from '../actions/calendar.actions';\nimport { OpenTrappAPI } from '../api/OpenTrappAPI';\nimport { errorNotificationAction } from '../actions/notifications.actions';\nimport { isNil } from 'lodash';\nimport { selectedMonthSelector } from '../selectors/selectors';\nimport { Action } from 'redux';\n\nexport const loadMonthEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, { openTrappApi }: {openTrappApi: OpenTrappAPI}) =>\n    action$.pipe(\n        ofType(CALENDAR_CONSTANTS.MONTH_CHANGED, CALENDAR_CONSTANTS.LOAD_MONTH),\n        map((a: any) => a.payload as { year: number, month: number }),\n        withLatestFrom(state$.pipe(map(selectedMonthSelector))),\n        map(([actionMonth, stateMonth]) => isNil(actionMonth) ? stateMonth : actionMonth),\n        switchMap(({year, month}) => openTrappApi.calendarMonth(year, month)),\n        map(m => monthLoadedAction(m)),\n        catchError(err => {\n            console.error(err);\n            return of(errorNotificationAction('Month data fetching failed'));\n        })\n    );\n","import { of, from, concat } from 'rxjs';\nimport { Action } from 'redux';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { OpenTrappState } from '../redux/root.reducer';\nimport { isNil } from 'lodash';\nimport { CALENDAR_CONSTANTS, REGISTRATION_CONSTANTS, WORK_LOG_CONSTANTS } from '../actions/constants';\nimport { catchError, map, mergeMap, withLatestFrom, mergeAll, ignoreElements } from 'rxjs/operators';\nimport {\n  bulkEditDoneAction,\n  tagsLoadedAction,\n  workLogLoadedAction,\n  workLogRemovedAction, workLogSavedAction,\n  workLogUpdatedAction\n} from '../actions/workLog.actions';\nimport { OpenTrappAPI } from '../api/OpenTrappAPI';\nimport { errorNotificationAction, infoNotificationAction } from '../actions/notifications.actions';\nimport { ParsedWorkLog } from '../workLogExpressionParser/ParsedWorkLog';\nimport { BulkEditDTO } from '../api/dtos';\n\nexport const loadWorkLogsEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(CALENDAR_CONSTANTS.MONTH_CHANGED, WORK_LOG_CONSTANTS.LOAD_WORK_LOGS, CALENDAR_CONSTANTS.LOAD_MONTH, REGISTRATION_CONSTANTS.WORK_LOG_SAVED, WORK_LOG_CONSTANTS.BULK_EDIT_DONE),\n        map((a: any) => a.payload as { year: number, month: number }),\n        withLatestFrom(state$.pipe(map(s => s.calendar.selectedMonth))),\n        map(([actionMonth, stateMonth]) => isNil(actionMonth) ? stateMonth : actionMonth),\n        mergeMap(({year, month}) => openTrappApi.workLogEntries(year, month)),\n        map(e => workLogLoadedAction(e)),\n        catchError(e => {\n          console.error('Workloads fetching failed', e)\n          return of(errorNotificationAction('Workloads fetching failed'));\n        })\n    );\n\nexport const removeWorkLogEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(WORK_LOG_CONSTANTS.REMOVE_WORK_LOG),\n        map((a: any) => a.payload as string),\n        mergeMap(id => openTrappApi.removeWorkLog(id)),\n        mergeMap(id => [workLogRemovedAction(id), infoNotificationAction('Work log removed')]),\n        catchError(e => {\n          console.error('Removal of worklog failed', e);\n          return of(errorNotificationAction('Removing work log failed'));\n        })\n    );\n\nconst saveWorkLogs = (workLog: ParsedWorkLog, username: string, openTrappApi: OpenTrappAPI) => {\n  return from(workLog.days.map(d => openTrappApi.saveWorkLog(username, d, workLog.tags, workLog.workload, workLog.note))).pipe(\n      mergeAll(),\n      ignoreElements()\n  );\n}\n\nexport const saveWorkLogEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(WORK_LOG_CONSTANTS.SAVE_WORK_LOG),\n        map((a: any) => a.payload as ParsedWorkLog),\n        withLatestFrom(state$.pipe(map(s => s.authentication.user?.name))),\n        mergeMap(([workLog, username]) => concat(\n            saveWorkLogs(workLog, username, openTrappApi),\n            of(workLogSavedAction()),\n            of(infoNotificationAction('Work log created'))\n        )),\n    );\n\nexport const updateWorkLogEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(WORK_LOG_CONSTANTS.UPDATE_WORK_LOG),\n        map((a: any) => a.payload as { id: string, tags: string[], workload: string }),\n        mergeMap(({id, tags, workload}) => openTrappApi.updateWorkLog(id, tags, workload)),\n        mergeMap(w => [workLogUpdatedAction(w), infoNotificationAction('Work log updated')]),\n        catchError(e => {\n          console.error(e);\n          return of(errorNotificationAction('Update of work log failed'));\n        })\n    );\n\nexport const bulkEditWorkLogsEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(WORK_LOG_CONSTANTS.BULK_EDIT_REQUEST),\n        map((a: any) => a.payload as BulkEditDTO),\n        mergeMap(dto => openTrappApi.bulkEdit(dto)),\n        map(bulkEditDoneAction),\n        catchError(e => {\n          console.error(e);\n          return of(errorNotificationAction('Bulk edit failed'))\n        })\n    );\n\nexport const loadTagsEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(WORK_LOG_CONSTANTS.LOAD_TAGS),\n        map((a: any) => a.payload as number),\n        mergeMap(numberOfPastMonths => openTrappApi.tags(numberOfPastMonths)),\n        map(tagsLoadedAction)\n    )\n","import { Action } from 'redux';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { map, switchMap } from 'rxjs/operators';\nimport { OpenTrappState } from '../redux/root.reducer';\nimport { OpenTrappAPI } from '../api/OpenTrappAPI';\nimport { ADMIN_CONSTANTS } from '../actions/constants';\nimport {\n    authorizedUsersLoadedAction,\n    DeleteServiceAccountAction,\n    serviceAccountDeletedAction,\n    serviceAccountsLoadedAction\n} from '../actions/admin.actions';\n\nexport const loadServiceAccountsEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(ADMIN_CONSTANTS.LOAD_SERVICE_ACCOUNTS),\n        switchMap(_ => openTrappApi.serviceAccounts),\n        map(serviceAccounts => serviceAccountsLoadedAction(serviceAccounts))\n    );\n\nexport const deleteServiceAccountEpic = (action$: ActionsObservable<DeleteServiceAccountAction>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(ADMIN_CONSTANTS.DELETE_SERVICE_ACCOUNT),\n        map(a => a.payload),\n        switchMap(id => openTrappApi.deleteServiceAccount(id)),\n        map(id => serviceAccountDeletedAction(id))\n    );\n\nexport const loadAuthorizedUsersEpic = (action$: ActionsObservable<Action>, state$: StateObservable<OpenTrappState>, {openTrappApi}: { openTrappApi: OpenTrappAPI }) =>\n    action$.pipe(\n        ofType(ADMIN_CONSTANTS.LOAD_AUTHORIZED_USERS),\n        switchMap(_ => openTrappApi.authorizedUsers),\n        map(authorizedUsers => authorizedUsersLoadedAction(authorizedUsers))\n    );\n","import { OpenTrappAPI } from '../api/OpenTrappAPI';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { OpenTrappState } from '../redux/root.reducer';\nimport { REGISTRATION_CONSTANTS } from '../actions/constants';\nimport { LoadPresetsAction, presetsLoadedAction } from '../actions/registration.actions';\nimport { Preset } from '../components/registrationPage/registration.model';\n\nexport const loadPresetsEpic = (action$: ActionsObservable<LoadPresetsAction>, state$: StateObservable<OpenTrappState>, {openTrappApi}: {openTrappApi: OpenTrappAPI}) =>\n    action$.pipe(\n        ofType(REGISTRATION_CONSTANTS.LOAD_PRESETS),\n        map(a => a.payload),\n        mergeMap(limit => openTrappApi.presets(limit)),\n        map(presets => presets.map(p => new Preset(p))),\n        map(presetsLoadedAction)\n    );\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { rootReducer } from './root.reducer';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { OpenTrappRestAPI } from '../api/OpenTrappAPI';\nimport epic from '../epics'\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const getStore = () => {\n  const epicsMiddleware = createEpicMiddleware({ dependencies: { openTrappApi: OpenTrappRestAPI } })\n  const store = createStore(\n      rootReducer,\n      composeEnhancers(\n          applyMiddleware(\n              epicsMiddleware\n          )\n      )\n  );\n  epicsMiddleware.run(epic);\n  return store;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { getStore } from './redux/store';\n\nReactDOM.render(\n  <Provider store={getStore()}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}